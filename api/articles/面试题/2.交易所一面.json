{"title":"2.交易所一面","uid":"a27f8cb4a0e9f55c9e8d2da96f3e5630","slug":"面试题/2.交易所一面","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/面试题/2.交易所一面.json","keywords":null,"cover":null,"content":"<ol>\n<li>Vue3和vue2有啥区别</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.双向数据绑定原理不同</span><br><span class=\"line\">Vue2 的双向数据绑定是利用ES5的一个APIObject.definePropert() 对数据进行劫持，结合发布订阅模式的方式来实现的。</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 中使用ES6的Proxy API对数据代理。</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 使用数据代理的优势有以下几点：1）definePropert 只能监听某个属性，不能对整个对象进行监听 2）可以省去for in，闭包等内容来提升效率（直接绑定整个对象即可）3）可以监听数组，不用再单独的对数组做特异性操作，Vue3可以检测到数组内部数据的变化</span><br><span class=\"line\"></span><br><span class=\"line\">2.是否支持碎片</span><br><span class=\"line\">Vue2 不支持碎片。Vue3 支持碎片，就是说可以拥有多个根节点</span><br><span class=\"line\"></span><br><span class=\"line\">3.API 类型不同</span><br><span class=\"line\">Vue2 使用选项类型api,选项型api 在代码里分割了不同的属性：data,computed,method等。</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 使用合成型api,新的合成型api 能让我们使用方法来分割，相比于旧的api 使用属性来分组，这样代码会更加简便和整洁。</span><br><span class=\"line\"></span><br><span class=\"line\">4定义数据变量和方法不同</span><br><span class=\"line\">Vue2是把数据放到了data 中，在 Vue2中 定义数据变量是data()&#123;&#125;,创建的方法要在method:&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 就需要使用一个新的setup()方法，此方法在组件初始化构造的时候触发。使用以下三个步骤来建立反应性数据：1）从vue 引入 reactive；2）使用 reactive ()方法来声明数据为响应性数据；3） 使用setup()方法来返回我们的响应性数据，从而template 可以获取这些响应性数据。</span><br><span class=\"line\"></span><br><span class=\"line\">5.生命周期钩子函数不同</span><br><span class=\"line\">Vue2 中的生命周期：beforeCreate 组件创建之前；created 组建创建之后；beforeMount 组件挂载到页面之前执行；Mounted 组件挂载到页面之后执行，beforeUpdate 组件更新之前；updated组件更新之后</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 中的生命周期：setup 开始创建组件；onBeforeMount 组件挂载到页面之前执行；onMounted 组件挂载到页面之后执行；onBeforeUpdate 组件更新之前；onUpdated 组件更新之后；</span><br><span class=\"line\"></span><br><span class=\"line\">而且 Vue3 生命周期在调用前需要先进行引入。除了这些钩子函数外，Vue3 还增加了 onRenderTracked 和onRenderTriggered 函数。</span><br><span class=\"line\"></span><br><span class=\"line\">6.父子传参不同</span><br><span class=\"line\">Vue2 父传子，用props ；子传父用事件Emitting Events。在Vue2 中，会调用this$emit 然后传入事件名和对象。</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 父传子，用props;子传父用Emitting Events 。在Vue3 中的setup()中的第一参数content 对象中就有 emit,那么我们只要在setup()接收第二个参数中使用分解对象法取出emit 就可以在setup 方法中随意使用了。</span><br><span class=\"line\"></span><br><span class=\"line\">7.指令与插槽不同</span><br><span class=\"line\">Vue2 中使用slot 可以直接使用slot ;v-for 与v-if 在Vue2中优先级高的是v-for 指令，而且不建议一起使用。</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 中必须是使用v-slot的形式；vue 3中v-for 与v-if ，只会把当前v-if 当作v-for 的一个判断语句，不会相互冲突；</span><br><span class=\"line\"></span><br><span class=\"line\">Vue3 中移除keyCode 作为v-on 的修饰符，当然也不支持config.keyCodes，取而代之的是使用键名来作为事件的修饰符来使用，于是Vue.config.keyCodes 也被弃用了-vue2我们在监听按键事件的时候，是可以通过在事件后面加上按键码来实现监听某一个按键的--mulingyuer.com/archives/831/# ；</span><br><span class=\"line\">————————————————</span><br><span class=\"line\">版权声明：本文为CSDN博主「多啦爱梦的梦想」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class=\"line\">原文链接：https://blog.csdn.net/weixin_56263402/article/details/128799953</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>写h5和pc端有什么区别嘛</p>\n</li>\n<li><p>怎么做首屏优化</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">HTML</span>优化：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">将<span class=\"variable constant_\">CSS</span>放在里，可用来避免浏览器渲染的重复计算。</span><br><span class=\"line\">将<span class=\"title class_\">JavaScript</span>脚本放在的最后面，避免资源阻塞页面渲染。</span><br><span class=\"line\"></span><br><span class=\"line\">减少<span class=\"variable constant_\">DOM</span>数量，减少浏览器渲染过程中的计算耗时。</span><br><span class=\"line\"></span><br><span class=\"line\">通过合理使用浏览器<span class=\"variable constant_\">GPU</span>合成，提升浏览器渲染效率。</span><br><span class=\"line\"></span><br><span class=\"line\">请求优化：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">非核心资源异步加载，控制首屏请求数量；</span><br><span class=\"line\">静态文件进行缓存处理，合理设置缓存时效；</span><br><span class=\"line\"></span><br><span class=\"line\">使用http2<span class=\"number\">.0</span>协议，来提升传输性能，减小请求阻塞；</span><br><span class=\"line\"></span><br><span class=\"line\">网站开启<span class=\"variable constant_\">GZIP</span>优化，进行网页压缩处理；</span><br><span class=\"line\"></span><br><span class=\"line\">对客户端进行资源预请求和预加载，比如使用预热<span class=\"title class_\">Web</span>容器。</span><br><span class=\"line\"></span><br><span class=\"line\">渲染优化：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">可以使用骨架屏进行页面预渲染；</span><br><span class=\"line\">对页面进行分片/分屏加载，将页面可见/可交互时间提前；</span><br><span class=\"line\"></span><br><span class=\"line\">优化资源加载的顺序和粒度，仅加载需要的资源，通过异步加载方式加载剩余资源；</span><br><span class=\"line\"></span><br><span class=\"line\">使用差异化服务，比如读写分离，对于不同场景按需加载其所需要的模块；</span><br><span class=\"line\"></span><br><span class=\"line\">使用服务端直接渲染，减少页面二次请求和渲染的耗时。</span><br><span class=\"line\"></span><br><span class=\"line\">静态资源优化:</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">针对<span class=\"variable constant_\">JS</span>、<span class=\"variable constant_\">CSS</span> 、<span class=\"variable constant_\">HTML</span>资源合并与压缩。</span><br><span class=\"line\">针对不同场景使用不同的图片格式。</span><br><span class=\"line\"></span><br><span class=\"line\">使用雪碧图（<span class=\"variable constant_\">CSS</span> <span class=\"title class_\">Sprites</span>）和<span class=\"variable constant_\">SVG</span>，替代多个小图。</span><br><span class=\"line\"></span><br><span class=\"line\">首屏预加载，非首屏懒加载。</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>h5的适配怎么做</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rem适配</span><br><span class=\"line\">vm</span><br><span class=\"line\">calc</span><br></pre></td></tr></table></figure>\n\n<p>5.rem适配有啥缺点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（1）在奇葩的dpr设备上(设备像素比(简称dpr))表现效果不太好，比如一些华为的高端机型用rem布局会出现错乱。</span><br><span class=\"line\">（2）使用iframe引用也会出现问题。</span><br><span class=\"line\">（3）rem在多屏幕尺寸适配上与当前两大平台的设计哲学不一致。即大屏的出现到底是为了看得又大又清楚，还是为了看的更多的问题。</span><br><span class=\"line\"></span><br><span class=\"line\">（4）rem在处理小数的时候会有误差，而且对小屏幕不友好。</span><br><span class=\"line\">————————————————</span><br><span class=\"line\">版权声明：本文为CSDN博主「more名奇妙」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class=\"line\">原文链接：https://blog.csdn.net/m0_67948827/article/details/127031751</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>有做过老项目改造吗</li>\n<li>老项目改造有什么难点</li>\n<li>做过国际化嘛</li>\n<li>Webpack做过哪些优化</li>\n<li>你的强项在哪</li>\n<li>谈谈你对redux的理解</li>\n</ol>\n","text":" Vue3和vue2有啥区别 12345678910111213141516171819202122232425262728293031323334353637...","permalink":"/post/面试题/2.交易所一面","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":16,"path":"api/tags/面试题.json"}],"toc":"","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"11.黑镜一面","uid":"9e13f3b46bb4f0248b7fc78b0ae5b39a","slug":"面试题/11.黑镜一面","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/面试题/11.黑镜一面.json","keywords":null,"cover":[],"text":" 什么是事件冒泡和事件捕获 https://www.pipipi.net/27549.html vue和react的事件实现原理 React基于浏览器的事件机制...","permalink":"/post/面试题/11.黑镜一面","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":16,"path":"api/tags/面试题.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"3.交研智慧一面","uid":"edc763cbfc515ed7263e9656729e3c28","slug":"面试题/3.交研智慧一面","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/面试题/3.交研智慧一面.json","keywords":null,"cover":[],"text":" 详细介绍一个项目 seviceWorker和普通缓存有啥区别 1234567891011121314151617181920Service Worker 和普...","permalink":"/post/面试题/3.交研智慧一面","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":16,"path":"api/tags/面试题.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}