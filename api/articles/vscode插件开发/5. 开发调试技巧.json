{"title":"5. 开发调试技巧","uid":"813367ef798c82e2d3b12299c59e2982","slug":"vscode插件开发/5. 开发调试技巧","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/vscode插件开发/5. 开发调试技巧.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在介绍完一些比较简单的内容点之后，我觉得有必要先和大家介绍一些开发中遇到的一些细节问题以及技巧，特别是后面一章节将要介绍WebView的知识，这个坑会比较多，避免大家走弯路。</p>\n<h1 id=\"开发方式\"><a href=\"#开发方式\" class=\"headerlink\" title=\"开发方式\"></a>开发方式</h1><p>最理想的方式是准备双显示器，一个写代码，一个运行插件，实践证明这种方式开发效率会提升很多，每次修改完代码之后直接<code>Ctrl+R</code>重新加载即可，非常方便。</p>\n<h1 id=\"日志查看\"><a href=\"#日志查看\" class=\"headerlink\" title=\"日志查看\"></a>日志查看</h1><p>就我目前遇到的情况来看，vscode日志主要有这5种：</p>\n<h2 id=\"3-1-旧窗口的调试控制台\"><a href=\"#3-1-旧窗口的调试控制台\" class=\"headerlink\" title=\"3.1. 旧窗口的调试控制台\"></a>3.1. 旧窗口的调试控制台</h2><p>扩展里的<code>console.log()</code>日志一般输出在这里，但是有很大的限制，结构稍微深一点的对象在这里了就显示不了：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Unable to log remote console arguments Output omitted for an object that cannot be inspected (Error: [sxei.vscode-plugin-demo]: Proposed API is only available when running out of dev or with the following command line switch: –enable-proposed-api sxei.vscode-plugin-demo)</p></blockquote>\n<p>这里只能看成是新窗口开发者控制台日志的一种快捷显示，以下是旧窗口调试控制台显示的内容：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092524198-2128000609.png\" alt=\"img\"></p>\n<p>而对应的内容在新窗口的开发者控制台显示如下：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092542113-1079237606.png\" alt=\"img\"></p>\n<p>可以看到，结构较深的对象即使在控制台也无法显示，目前发现的唯一比较好的方法就是在输出的地方打一个断点，然后运行的时候会自动卡在这里，鼠标悬停就可以查看对象的内容。</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092559813-140401356.png\" alt=\"img\"></p>\n<h2 id=\"3-2-新窗口的调试控制台\"><a href=\"#3-2-新窗口的调试控制台\" class=\"headerlink\" title=\"3.2. 新窗口的调试控制台\"></a>3.2. 新窗口的调试控制台</h2><p>一般没什么扩展相关日志会输出在这里。</p>\n<h2 id=\"3-3-旧窗口的开发者控制台\"><a href=\"#3-3-旧窗口的开发者控制台\" class=\"headerlink\" title=\"3.3. 旧窗口的开发者控制台\"></a>3.3. 旧窗口的开发者控制台</h2><p>快捷键<code>Ctrl+Alt+I</code>，这里一般显示vscode本身一些日志，和扩展相关的不会显示在这里，所以这个也不用太多关心。</p>\n<h2 id=\"3-4-新窗口的开发者控制台\"><a href=\"#3-4-新窗口的开发者控制台\" class=\"headerlink\" title=\"3.4. 新窗口的开发者控制台\"></a>3.4. 新窗口的开发者控制台</h2><p>快捷键也是<code>Ctrl+Alt+I</code>，不记得的可以从<code>帮助</code> -&gt; <code>切换开发人员工具</code>找到。这个控制台很重要，有时候如果发现你的代码莫名其妙没生效，很有可能是报错了，这种报错是不会显示在<code>旧窗口调试控制台</code>的，如果你不知道到这里来查看日志，那么你只能一脸懵逼的到处乱试了，调试控制台只打印常规日志，语法错误并不会显示在这里。</p>\n<p>例如，我在跳转定义实现前人为制造一个错误：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">provideDefinition</span>(<span class=\"params\"><span class=\"variable language_\">document</span>, position, token</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aaf);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> fileName    = <span class=\"variable language_\">document</span>.<span class=\"property\">fileName</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 省略其它代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行后就会发现点击跳转不生效，但是也没有什么报错提示，此时只能打开控制台查看才能发现问题：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092831383-554527682.png\" alt=\"img\"></p>\n<h2 id=\"3-5-WebView控制台\"><a href=\"#3-5-WebView控制台\" class=\"headerlink\" title=\"3.5. WebView控制台\"></a>3.5. WebView控制台</h2><p><code>WebView</code>我们会在下一章节介绍，这里先提一下。<code>Webview</code>的控制台比较特殊，需要特殊的命令才能打开，按下<code>Ctrl+Shift+P</code>然后执行<code>打开Webview开发工具</code>，英文版应该是<code>Open Webview Developer Tools</code>：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092855266-1904942237.png\" alt=\"img\"></p>\n<p>开发时我们把它当成一个普通的网页来看就好了。</p>\n<h1 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h1><p>vscode插件的调试非常简单方便，只需要在需要调试的地方打个断点，然后按<code>F5</code>执行即可：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016092935660-1039810316.png\" alt=\"img\"></p>\n<p>几个调试快捷键：</p>\n<ul>\n<li><code>F5</code>运行</li>\n<li><code>Ctrl+F2</code>停止运行</li>\n<li><code>F6</code>下一步跳过（类似于Chrome的<code>F10</code>）</li>\n<li><code>F5</code>下一步跳入</li>\n<li><code>F8</code>跳过</li>\n</ul>\n<h1 id=\"如何快速找到我想找的内容\"><a href=\"#如何快速找到我想找的内容\" class=\"headerlink\" title=\"如何快速找到我想找的内容\"></a>如何快速找到我想找的内容</h1><p>刚开始只能先大概对整个vscode的api有一个大概了解，了解了之后就大概清楚一般什么功能会怎么实现，该去什么地方找，所有的vscode的api都可以在<code>vscode.d.ts</code>文件里面找到：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016093008271-1545026665.png\" alt=\"img\"></p>\n<p>不得不佩服，正规大型项目的注释写的真的不是一般的详细，<a href=\"https://code.visualstudio.com/docs/extensionAPI/vscode-api\">官网的API文档</a>肯定也是基于这个自动生成的，反正把这个<code>ts</code>文件吃透了，基本上你想实现什么功能要怎么实现都了如指掌了。</p>\n<h1 id=\"查看插件存放目录\"><a href=\"#查看插件存放目录\" class=\"headerlink\" title=\"查看插件存放目录\"></a>查看插件存放目录</h1><p>插件安装后根据操作系统不同会放在如下目录：</p>\n<ul>\n<li>Windows系统：<code>%USERPROFILE%\\.vscode\\extensions</code></li>\n<li>Mac&#x2F;Linux：<code>~/.vscode/extensions</code></li>\n</ul>\n<p>想要学习查看其它插件的代码可以找到这个目录：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016093021874-1771606398.png\" alt=\"img\"></p>\n<h1 id=\"一些个人经验分享\"><a href=\"#一些个人经验分享\" class=\"headerlink\" title=\"一些个人经验分享\"></a>一些个人经验分享</h1><h2 id=\"7-1-调试控制台日志不可靠\"><a href=\"#7-1-调试控制台日志不可靠\" class=\"headerlink\" title=\"7.1. 调试控制台日志不可靠\"></a>7.1. 调试控制台日志不可靠</h2><p>vscode有一个很坑爹的地方，这里特别要注意，当require一个function进来并打印输出时，虽然打印在控制台显示为null，但其实是有值的，不知道的人很容易被误导，直接就是被这个现象骗了很久，<strong>切记切记</strong>！</p>\n<p>test-require-function.js：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">testRequireFunction</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;进入testRequireFunction方法&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a, b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = testRequireFunction;</span><br></pre></td></tr></table></figure>\n\n<p><code>extension.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">activate</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> testFn = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./test-require-function&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(testFn); <span class=\"comment\">// vscode的日志输出不可靠，这里竟然会打印null？！</span></span><br><span class=\"line\">    <span class=\"title function_\">testFn</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// 1, 2</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">null</span><br><span class=\"line\">进入testRequireFunction方法</span><br><span class=\"line\">1 2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-2-代码为什么没生效\"><a href=\"#7-2-代码为什么没生效\" class=\"headerlink\" title=\"7.2. 代码为什么没生效\"></a>7.2. 代码为什么没生效</h2><p>代码没生效一般从这几个地方去查找：</p>\n<ul>\n<li><code>activationEvents</code>里面添加了吗？开发的时候如果老是忘记可以直接设置成<code>*</code>；</li>\n<li>代码是不是报错了？如前文所说，很多错误是不会暴露出来的，需要手动打开控制台查看；</li>\n<li>代码是不是忘记引入了？有时候拆分多个文件之后可能忘了引入；</li>\n<li>逻辑是不是写错了？最好的办法就是debug，这是找问题最快的方法；</li>\n<li>版本冲突</li>\n</ul>\n<p>这里重点说一下最后面的版本冲突，这个甚至可以说是vscode本身的一些bug，经常发现代码莫名其妙地没生效，怎么调试都不对，后来发现运行的根本就不是我们正在开发的那个版本，特别是当你的插件已经发了一版到应用市场并安装后，本地再按F5运行，理论上说debug运行的会覆盖已安装的，但有时候还是会出现异常情况，所以为了以防万一，当出现这种情况时可以先把已经安装的给卸载。</p>\n<p>还有一个问题就是，有时候明明安装了版本更加新的那个，结果运行的却是旧的，打开扩展目录会发现很多并存的同名不同版本插件，或者可能先是通过vsix方式安装了一个版本，然后又从应用市场安装一个，总之解决这类问题最好的方法就是：先卸载再安装，实在不行手动去插件目录删除之！</p>\n<h2 id=\"7-3-打开文件\"><a href=\"#7-3-打开文件\" class=\"headerlink\" title=\"7.3. 打开文件\"></a>7.3. 打开文件</h2><p>打开文件是<code>vscode.window.showTextDocument</code>而不是<code>vscode.workspace.openTextDocument</code>，这个根据字面意思很容易搞错，原来老外也有命名不准确的时候啊，哈哈。</p>\n<ul>\n<li><code>vscode.workspace.openTextDocument</code>仅仅是加载文档并返回一个<code>TextDocument</code>对象，但是并不在vscode中打开；</li>\n<li><code>vscode.window.showTextDocument</code>则是在vscode中打开一个文档；</li>\n</ul>\n<p>其实：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.<span class=\"property\">workspace</span>.<span class=\"title function_\">openTextDocument</span>(<span class=\"string\">&#x27;someFilePath&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">document</span> =&gt;</span> &#123;</span><br><span class=\"line\">\tvscode.<span class=\"property\">window</span>.<span class=\"title function_\">showTextDocument</span>(<span class=\"variable language_\">document</span>, <span class=\"function\"><span class=\"params\">editor</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 可以操作文档的editor对象</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>等价于：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.<span class=\"property\">window</span>.<span class=\"title function_\">showTextDocument</span>(vscode.<span class=\"property\">Uri</span>.<span class=\"title function_\">file</span>(<span class=\"string\">&#x27;someFilePath&#x27;</span>), <span class=\"function\"><span class=\"params\">editor</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 可以操作文档的editor对象</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-4-工程根目录的获取\"><a href=\"#7-4-工程根目录的获取\" class=\"headerlink\" title=\"7.4. 工程根目录的获取\"></a>7.4. 工程根目录的获取</h2><p>被这个问题踩过很多次坑，所有重点介绍一下。</p>\n<p>有的人的vscode工作空间是这样的，每一个工程一个个地单独拖入：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016093050606-1105831560.png\" alt=\"img\"></p>\n<p>也有的人是直接用打开文件夹的方式把存放代码的父文件夹给打开：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016093107878-964654349.png\" alt=\"img\"></p>\n<p>但是如果此时你点击<code>将工作区另存为</code>保存了工作区之后就变成这样了（请注意图标的变化）：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/352797/201810/352797-20181016093116500-2050472646.png\" alt=\"img\"></p>\n<p>所以，即便拿到了某个文件的完整路径也不好获取这个文件的工程路径，因为不知道工作区的这个文件夹名字是你的工程名还是存放工程的父文件夹的名字。</p>\n<p>已知：</p>\n<ul>\n<li>vscode以前有一个<code>vscode.workspace.rootPath</code>，由于后来vscode支持multipleRoot模式，所以这个字段已经过时作废了。</li>\n<li><code>vscode.workspace.workspaceFolders</code>可以获取当前工作区所有根文件夹数组；</li>\n</ul>\n<p>之前我写了一个简单粗暴的获取工程目录方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取当前所在工程根目录，有3种使用方法：&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * getProjectPath(uri) uri 表示工程内某个文件的路径&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * getProjectPath(document) document 表示当前被打开的文件document对象&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * getProjectPath() 会自动从 activeTextEditor 拿document对象，如果没有拿到则报错</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; document </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"title function_\">getProjectPath</span>(<span class=\"params\"><span class=\"variable language_\">document</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">document</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span> = vscode.<span class=\"property\">window</span>.<span class=\"property\">activeTextEditor</span> ? vscode.<span class=\"property\">window</span>.<span class=\"property\">activeTextEditor</span>.<span class=\"property\">document</span> : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">document</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">showError</span>(<span class=\"string\">&#x27;当前激活的编辑器不是文件或者没有文件被打开！&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> currentFile = (<span class=\"variable language_\">document</span>.<span class=\"property\">uri</span> ? <span class=\"variable language_\">document</span>.<span class=\"property\">uri</span> : <span class=\"variable language_\">document</span>).<span class=\"property\">fsPath</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> projectPath = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> workspaceFolders = vscode.<span class=\"property\">workspace</span>.<span class=\"property\">workspaceFolders</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">uri</span>.<span class=\"property\">path</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 由于存在Multi-root工作区，暂时没有特别好的判断方法，先这样粗暴判断</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果发现只有一个根文件夹，读取其子文件夹作为 workspaceFolders</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (workspaceFolders.<span class=\"property\">length</span> == <span class=\"number\">1</span> &amp;&amp; workspaceFolders[<span class=\"number\">0</span>] === vscode.<span class=\"property\">workspace</span>.<span class=\"property\">rootPath</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rootPath = workspaceFolders[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> files = fs.<span class=\"title function_\">readdirSync</span>(rootPath);</span><br><span class=\"line\">        workspaceFolders = files.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">name</span> =&gt;</span> !<span class=\"regexp\">/^\\./g</span>.<span class=\"title function_\">test</span>(name)).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">name</span> =&gt;</span> path.<span class=\"title function_\">resolve</span>(rootPath, name));</span><br><span class=\"line\">        <span class=\"comment\">// vscode.workspace.rootPath会不准确，且已过时</span></span><br><span class=\"line\">        <span class=\"comment\">// return vscode.workspace.rootPath + &#x27;/&#x27; + this._getProjectName(vscode, document);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    workspaceFolders.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">folder</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentFile.<span class=\"title function_\">indexOf</span>(folder) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            projectPath = folder;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!projectPath) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">showError</span>(<span class=\"string\">&#x27;获取工程根路径异常！&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> projectPath;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>这种方式生效的前提是，如果是按照第一种方式存放工作空间的，工程的数目必须大于等于2，但是这种判断方式不用说肯定会不准确。</p>\n<p>后来换成了另外一种方式，考虑到工作接触到的项目无论是node端还是前端都会有<code>package.json</code>文件在根目录，所以就根据哪个文件夹有这个文件来判断，也只能是这样了。</p>\n","text":"前言在介绍完一些比较简单的内容点之后，我觉得有必要先和大家介绍一些开发中遇到的一些细节问题以及技巧，特别是后面一章节将要介绍WebView的知识，这个坑会比较多...","permalink":"/post/vscode插件开发/5. 开发调试技巧","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"vscode插件开发","slug":"vscode插件开发","count":7,"path":"api/tags/vscode插件开发.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">开发方式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">日志查看</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E6%97%A7%E7%AA%97%E5%8F%A3%E7%9A%84%E8%B0%83%E8%AF%95%E6%8E%A7%E5%88%B6%E5%8F%B0\"><span class=\"toc-text\">3.1. 旧窗口的调试控制台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E6%96%B0%E7%AA%97%E5%8F%A3%E7%9A%84%E8%B0%83%E8%AF%95%E6%8E%A7%E5%88%B6%E5%8F%B0\"><span class=\"toc-text\">3.2. 新窗口的调试控制台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E6%97%A7%E7%AA%97%E5%8F%A3%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E6%8E%A7%E5%88%B6%E5%8F%B0\"><span class=\"toc-text\">3.3. 旧窗口的开发者控制台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-%E6%96%B0%E7%AA%97%E5%8F%A3%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E6%8E%A7%E5%88%B6%E5%8F%B0\"><span class=\"toc-text\">3.4. 新窗口的开发者控制台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-5-WebView%E6%8E%A7%E5%88%B6%E5%8F%B0\"><span class=\"toc-text\">3.5. WebView控制台</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">调试</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%BE%E5%88%B0%E6%88%91%E6%83%B3%E6%89%BE%E7%9A%84%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">如何快速找到我想找的内容</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%8F%92%E4%BB%B6%E5%AD%98%E6%94%BE%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">查看插件存放目录</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB\"><span class=\"toc-text\">一些个人经验分享</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-1-%E8%B0%83%E8%AF%95%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A5%E5%BF%97%E4%B8%8D%E5%8F%AF%E9%9D%A0\"><span class=\"toc-text\">7.1. 调试控制台日志不可靠</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-2-%E4%BB%A3%E7%A0%81%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%A1%E7%94%9F%E6%95%88\"><span class=\"toc-text\">7.2. 代码为什么没生效</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-3-%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">7.3. 打开文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-4-%E5%B7%A5%E7%A8%8B%E6%A0%B9%E7%9B%AE%E5%BD%95%E7%9A%84%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">7.4. 工程根目录的获取</span></a></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"4. WebView","uid":"c4ba207ec39c78e8fb0cded88eb2b98c","slug":"vscode插件开发/4. WebView","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/vscode插件开发/4. WebView.json","keywords":null,"cover":[],"text":"什么是Webview大家都知道，整个VSCode编辑器就是一张大的网页，其实，我们还可以在Visual Studio Code中创建完全自定义的、可以间接和no...","permalink":"/post/vscode插件开发/4. WebView","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"vscode插件开发","slug":"vscode插件开发","count":7,"path":"api/tags/vscode插件开发.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"6. 打包、发布、升级","uid":"4363a1c8f18b34e52ca1d5e6f6bd7690","slug":"vscode插件开发/6. 打包、发布、升级","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/vscode插件开发/6. 打包、发布、升级.json","keywords":null,"cover":[],"text":"发布方式插件开发完了，如何发布出去分享给他人呢？主要有3种方法： 方法一：直接把文件夹发给别人，让别人找到vscode的插件存放目录并放进去，然后重启vscod...","permalink":"/post/vscode插件开发/6. 打包、发布、升级","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"vscode插件开发","slug":"vscode插件开发","count":7,"path":"api/tags/vscode插件开发.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}