{"title":"认识mongodb","uid":"7b1d9f1b53c09e4a6b55593ac7c3e160","slug":"数据库/认识mongodb","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/数据库/认识mongodb.json","keywords":null,"cover":[],"content":"<h1 id=\"认识mongodb\"><a href=\"#认识mongodb\" class=\"headerlink\" title=\"认识mongodb\"></a>认识mongodb</h1><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p>\n<p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p>\n<p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p>\n<p>MongoDB 将数据存储为一个文档，数据结构由键值(key&#x3D;&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p>\n<p>启动mongo服务 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"主要特点\"><a href=\"#主要特点\" class=\"headerlink\" title=\"主要特点\"></a>主要特点</h3><ul>\n<li>MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易。</li>\n<li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName&#x3D;”Sameer”,Address&#x3D;”8 Gandhi Road”)来实现更快的排序。</li>\n<li>你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</li>\n<li>如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</li>\n<li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li>\n<li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li>\n<li>Mongodb中的Map&#x2F;reduce主要是用来对数据进行批量处理和聚合操作。</li>\n<li>Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</li>\n<li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li>\n<li>GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</li>\n<li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li>\n<li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li>\n<li>MongoDB安装简单。</li>\n</ul>\n<h3 id=\"概念解析\"><a href=\"#概念解析\" class=\"headerlink\" title=\"概念解析\"></a>概念解析</h3><p><img src=\"http://wangjinxin613.oss-cn-zhangjiakou.aliyuncs.com/mweb/2020/08/08/15968988634746.jpg\"></p>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><p>一个mongodb中可以建立多个数据库。</p>\n<p>MongoDB的默认数据库为”db”，该数据库存储在data目录中。</p>\n<p>MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中。</p>\n<p>“show dbs” 命令可以显示所有数据的列表。</p>\n<p>执行 “db” 命令可以显示当前数据库对象或集合。</p>\n<p><strong>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</strong></p>\n<ul>\n<li>admin： 从权限的角度来看，这是”root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</li>\n<li>local: 这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</li>\n<li>config: 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</li>\n</ul>\n<h3 id=\"文档-Document\"><a href=\"#文档-Document\" class=\"headerlink\" title=\"文档(Document)\"></a>文档(Document)</h3><p>文档是一组键值(key-value)对(即 BSON)。<strong>MongoDB 的文档不需要设置相同的字段</strong>，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。</p>\n<p>一个简单的文档例子如下：</p>\n<p>{“site”:”<a href=\"http://www.runoob.com/\">www.runoob.com</a>“, “name”:”菜鸟教程”}<br><img src=\"/media/15968942862509/15969681857250.jpg\"></p>\n<p>需要注意的是：</p>\n<p>文档中的键&#x2F;值对是有序的。<br>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。<br>MongoDB区分类型和大小写。<br>MongoDB的文档不能有重复的键。<br>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。<br>文档键命名规范：</p>\n<p>键不能含有\\0 (空字符)。这个字符用来表示键的结尾。<br>.和$有特别的意义，只有在特定环境下才能使用。<br>以下划线”_”开头的键是保留的(不是严格要求的)。</p>\n<h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><p>集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System)中的表格。</p>\n<p>集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p>\n<p>比如，我们可以将以下不同数据结构的文档插入到集合中：</p>\n<p>{“site”:”<a href=\"http://www.baidu.com\"}/\">www.baidu.com&quot;}</a><br>{“site”:”<a href=\"http://www.google.com\",\"name\":\"Google\"}\">www.google.com&quot;,&quot;name&quot;:&quot;Google&quot;}</a><br>{“site”:”<a href=\"http://www.runoob.com\",\"name\":\"菜鸟教程\",\"num\":5}\">www.runoob.com&quot;,&quot;name&quot;:&quot;菜鸟教程&quot;,&quot;num&quot;:5}</a></p>\n<p>当第一个文档插入时，集合就会被创建。</p>\n<p><img src=\"/media/15968942862509/15969777884391.jpg\"></p>\n<p><img src=\"/media/15968942862509/15969778061814.jpg\"></p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><ul>\n<li><p>创建一个数据库或者切换到该数据库<br>use test</p>\n</li>\n<li><p>显示所有的数据库<br>show dbs</p>\n</li>\n<li><p>删除数据库<br>db.dropDatabase()</p>\n</li>\n<li><p>创建集合<br>db.createCollection(name, options)</p>\n</li>\n</ul>\n<p><img src=\"/media/15968942862509/15969795587342.jpg\"></p>\n<ul>\n<li><p>显示所有的集合<br>show collections<br>或者<br>show tables</p>\n</li>\n<li><p>删除集合<br>db.user.drop()</p>\n</li>\n<li><p>添加一个文档<br><code>db.user.insert(&#123;&quot;name&quot;:&quot;菜鸟教程&quot;&#125;)</code><br>或<br><code>db.user.save(&#123;&quot;name&quot;: &quot;wangjinxin&quot;&#125;)</code></p>\n</li>\n</ul>\n<p>添加文档时如果这个集合没有创建，则会自动创建集合</p>\n<p>save()：如果 _id 主键存在则更新数据，如果不存在就插入数据。该方法新版本中已废弃，可以使用 db.collection.insertOne() 或 db.collection.replaceOne() 来代替。<br>insert(): 若插入的数据主键已经存在，则会抛 org.springframework.dao.DuplicateKeyException 异常，提示主键重复，不保存当前数据</p>\n<ul>\n<li>更新文档</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.update(</span><br><span class=\"line\">   &lt;query&gt;,</span><br><span class=\"line\">   &lt;update&gt;,</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     upsert: &lt;boolean&gt;,</span><br><span class=\"line\">     multi: &lt;boolean&gt;,</span><br><span class=\"line\">     writeConcern: &lt;document&gt;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>参数说明：</p>\n<p>query : update的查询条件，类似sql update查询内where后面的。<br>update : update的对象和一些更新的操作符（如$,$inc…）等，也可以理解为sql update查询内set后面的<br>upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。<br>multi : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。<br>writeConcern :可选，抛出异常的级别。</p>\n<p>也可以使用save方法<br>save() 方法通过传入的文档来替换已有文档，_id 主键存在就更新，不存在就插入。语法格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.save(</span><br><span class=\"line\">   &lt;document&gt;,</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     writeConcern: &lt;document&gt;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>参数说明：</p>\n<p>document : 文档数据。<br>writeConcern :可选，抛出异常的级别。</p>\n","text":"认识mongodbMongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。 在高负载的情况下，添加更多的节点，可以保证服务器性能。 Mo...","permalink":"/post/数据库/认识mongodb","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AE%A4%E8%AF%86mongodb\"><span class=\"toc-text\">认识mongodb</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">主要特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">概念解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3-Document\"><span class=\"toc-text\">文档(Document)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9B%86%E5%90%88\"><span class=\"toc-text\">集合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用命令</span></a></li></ol></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"1.尚方能源一面","uid":"4ec3ab85b3f89beb24c14eb859217c27","slug":"面试题/1.尚方能源一面","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/面试题/1.尚方能源一面.json","keywords":null,"cover":[],"text":" 字符串截取方法有哪些 str.slice(start,end) //从索引start开始到索引end结束不包括end。 start为起始索引，end为结束索引...","permalink":"/post/面试题/1.尚方能源一面","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":14,"path":"api/tags/面试题.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"10.鲁大师一面","uid":"9570406cfe6951000c21d8d5155a0b25","slug":"面试题/10.鲁大师一面","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/面试题/10.鲁大师一面.json","keywords":null,"cover":null,"text":" Webpack的构建流程 Type和interface的区别 js垃圾回收机制 说说对范型的理解 Sync的原理 ","permalink":"/post/面试题/10.鲁大师一面","photos":[],"count_time":{"symbolsCount":64,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":14,"path":"api/tags/面试题.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}