{"title":"开始","uid":"075200b24f3b143c5139f73a1f31aa8b","slug":"源码阅读笔记/vue/开始","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/源码阅读笔记/vue/开始.json","keywords":null,"cover":null,"content":"<h1 id=\"从入口开始\"><a href=\"#从入口开始\" class=\"headerlink\" title=\"从入口开始\"></a>从入口开始</h1><p>我们之前提到过 Vue.js 构建过程，在 web 应用下，我们来分析 Runtime + Compiler 构建出来的 Vue.js，它的入口是 <code>src/platforms/web/entry-runtime-with-compiler.js</code>：</p>\n<p>当我们的代码执行 <code>import Vue from &#39;vue&#39;</code> 的时候，就是从这个入口执行代码来初始化 Vue， 那么 Vue 到底是什么，它是怎么初始化的，我们来一探究竟。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* @flow */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/config&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn, cached &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/util/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mark, measure &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/util/perf&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./runtime/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; query &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./util/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; shouldDecodeNewlines &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./util/compat&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; compileToFunctions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./compiler/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> idToTemplate = <span class=\"title function_\">cached</span>(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> el = <span class=\"title function_\">query</span>(id)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el &amp;&amp; el.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mount = <span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$mount</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$mount</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  el?: string | Element,</span></span><br><span class=\"line\"><span class=\"params\">  hydrating?: boolean</span></span><br><span class=\"line\"><span class=\"params\"></span>): <span class=\"title class_\">Component</span> &#123;</span><br><span class=\"line\">  el = el &amp;&amp; <span class=\"title function_\">query</span>(el)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el === <span class=\"variable language_\">document</span>.<span class=\"property\">body</span> || el === <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>) &#123;</span><br><span class=\"line\">    process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">      <span class=\"string\">`Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.`</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = <span class=\"variable language_\">this</span>.<span class=\"property\">$options</span></span><br><span class=\"line\">  <span class=\"comment\">// resolve template/el and convert to render function</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!options.<span class=\"property\">render</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> template = options.<span class=\"property\">template</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> template === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (template.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>) === <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">          template = <span class=\"title function_\">idToTemplate</span>(template)</span><br><span class=\"line\">          <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; !template) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">              <span class=\"string\">`Template element not found or is empty: <span class=\"subst\">$&#123;options.template&#125;</span>`</span>,</span><br><span class=\"line\">              <span class=\"variable language_\">this</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (template.<span class=\"property\">nodeType</span>) &#123;</span><br><span class=\"line\">        template = template.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;invalid template option:&#x27;</span> + template, <span class=\"variable language_\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (el) &#123;</span><br><span class=\"line\">      template = <span class=\"title function_\">getOuterHTML</span>(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">mark</span>(<span class=\"string\">&#x27;compile&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; render, staticRenderFns &#125; = <span class=\"title function_\">compileToFunctions</span>(template, &#123;</span><br><span class=\"line\">        shouldDecodeNewlines,</span><br><span class=\"line\">        <span class=\"attr\">delimiters</span>: options.<span class=\"property\">delimiters</span>,</span><br><span class=\"line\">        <span class=\"attr\">comments</span>: options.<span class=\"property\">comments</span></span><br><span class=\"line\">      &#125;, <span class=\"variable language_\">this</span>)</span><br><span class=\"line\">      options.<span class=\"property\">render</span> = render</span><br><span class=\"line\">      options.<span class=\"property\">staticRenderFns</span> = staticRenderFns</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">mark</span>(<span class=\"string\">&#x27;compile end&#x27;</span>)</span><br><span class=\"line\">        <span class=\"title function_\">measure</span>(<span class=\"string\">`vue <span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>._name&#125;</span> compile`</span>, <span class=\"string\">&#x27;compile&#x27;</span>, <span class=\"string\">&#x27;compile end&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> mount.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Get outerHTML of elements, taking care</span></span><br><span class=\"line\"><span class=\"comment\"> * of SVG elements in IE as well.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getOuterHTML</span> (<span class=\"attr\">el</span>: <span class=\"title class_\">Element</span>): string &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el.<span class=\"property\">outerHTML</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> el.<span class=\"property\">outerHTML</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span><br><span class=\"line\">    container.<span class=\"title function_\">appendChild</span>(el.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> container.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">compile</span> = compileToFunctions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以找到Vue是在 src&#x2F;core&#x2F;instance&#x2F;index.js 被定义的，它实际上就是一个用 Function 实现的类，我们只能通过 <code>new Vue</code> 去实例化它。</p>\n<p>有些同学看到这不禁想问，为何 Vue 不用 ES6 的 Class 去实现呢？我们往后看这里有很多 <code>xxxMixin</code> 的函数调用，并把 <code>Vue</code> 当参数传入，它们的功能都是给 Vue 的 prototype 上扩展一些方法（这里具体的细节会在之后的文章介绍，这里不展开），Vue 按功能把这些扩展分散到多个模块中去实现，而不是在一个模块里实现所有，这种方式是用 Class 难以实现的。这么做的好处是非常方便代码的维护和管理，这种编程技巧也非常值得我们去学习。</p>\n<h3 id=\"initGlobalAPI\"><a href=\"#initGlobalAPI\" class=\"headerlink\" title=\"initGlobalAPI\"></a><code>initGlobalAPI</code></h3><p>Vue.js 在整个初始化过程中，除了给它的原型 prototype 上扩展方法，还会给 <code>Vue</code> 这个对象本身扩展全局的静态方法，它的定义在 <code>src/core/global-api/index.js</code> 中：</p>\n<h3 id=\"vue初始化\"><a href=\"#vue初始化\" class=\"headerlink\" title=\"vue初始化\"></a>vue初始化</h3><p><code>Vue</code> 只能通过 new 关键字初始化，然后会调用 <code>this._init</code> 方法， 该方法在 <code>src/core/instance/init.js</code> 中定义。Vue 初始化主要就干了几件事情，合并配置，初始化生命周期，初始化事件中心，初始化渲染，初始化 data、props、computed、watcher 等等</p>\n<p>Vue 的初始化逻辑写的非常清楚，把不同的功能逻辑拆成一些单独的函数执行，让主线逻辑一目了然，这样的编程思想是非常值得借鉴和学习的。</p>\n<p>由于我们这一章的目标是弄清楚模板和数据如何渲染成最终的 DOM，所以各种初始化逻辑我们先不看。在初始化的最后，检测到如果有 <code>el</code> 属性，则调用 <code>vm.$mount</code> 方法挂载 <code>vm</code>，挂载的目标就是把模板渲染成最终的 DOM，那么接下来我们来分析 Vue 的挂载过程。</p>\n","text":"从入口开始我们之前提到过 Vue.js 构建过程，在 web 应用下，我们来分析 Runtime + Compiler 构建出来的 Vue.js，它的入口是 s...","permalink":"/post/源码阅读笔记/vue/开始","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":7,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E5%85%A5%E5%8F%A3%E5%BC%80%E5%A7%8B\"><span class=\"toc-text\">从入口开始</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#initGlobalAPI\"><span class=\"toc-text\">initGlobalAPI</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#vue%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">vue初始化</span></a></li></ol></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"使用Jest对Vue组件进行单元测试","uid":"23849453bb676c7918a2ae11cb140881","slug":"其他/Jest/使用Jest对Vue组件进行单元测试","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/其他/Jest/使用Jest对Vue组件进行单元测试.json","keywords":null,"cover":[],"text":"使用Jest对Vue组件进行单元测试安装依赖 1npm install --save-dev @vue/test-utils vue-jest jest-tra...","permalink":"/post/其他/Jest/使用Jest对Vue组件进行单元测试","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Jest","slug":"Jest","count":3,"path":"api/tags/Jest.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"微前端概念","uid":"2e55a78a98794587d49e3a89fa8798ef","slug":"其他/微前端/微前端概念","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:34.000Z","comments":true,"path":"api/articles/其他/微前端/微前端概念.json","keywords":null,"cover":[],"text":"微前端概述 微前端概念是ThoughtWorks在2016年提出来的，它将微服务理念扩展到前端开发，解决中台微服务化后，前端由于仍为单体而存在的逻辑繁杂和臃肿的...","permalink":"/post/其他/微前端/微前端概念","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"微前端","slug":"微前端","count":1,"path":"api/tags/微前端.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}