{"title":"eslint入门笔记","uid":"d1e934425bd2164e83202854a7d7852f","slug":"其他/Eslint/eslint入门笔记","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:34.000Z","comments":true,"path":"api/articles/其他/Eslint/eslint入门笔记.json","keywords":null,"cover":null,"content":"<h1 id=\"Eslint-是什么\"><a href=\"#Eslint-是什么\" class=\"headerlink\" title=\"Eslint 是什么\"></a>Eslint 是什么</h1><h2 id=\"编码规范\"><a href=\"#编码规范\" class=\"headerlink\" title=\"编码规范\"></a>编码规范</h2><p>每个程序员都有自己的编码习惯，最常见的莫过于：</p>\n<ul>\n<li>有的人写代码一行代码结尾必须加分号 <code>;</code>，有的人觉得不加分号 <code>;</code> 更好看；</li>\n<li>有的人写代码一行代码不会超过 80 个字符，认为这样看起来简洁明了，有的人喜欢把所有逻辑都写在一行代码上，觉得别人看不懂的代码很牛逼；</li>\n<li>有的人使用变量必然会先定义 <code>var a = 10;</code>，而粗心的人写变量可能没有定义过就直接使用 <code>b = 10;</code>；</li>\n</ul>\n<h2 id=\"Lint-的含义\"><a href=\"#Lint-的含义\" class=\"headerlink\" title=\"Lint 的含义\"></a>Lint 的含义</h2><p>如果你写自己的项目怎么折腾都没关系，但是在公司中老板希望每个人写出的代码都要符合一个统一的规则，这样别人看源码就能够看得懂，因为源码是符合统一的编码规范制定的。</p>\n<p>那么问题来了，总不能每个人写的代码老板都要一行行代码去检查吧，这是一件很蠢的事情。凡是重复性的工作，都应该被制作成工具来节约成本。这个工具应该做两件事情：</p>\n<ul>\n<li>提供编码规范；</li>\n<li>提供自动检验代码的程序，并打印检验结果：告诉你哪一个文件哪一行代码不符合哪一条编码规范，方便你去修改代码。</li>\n</ul>\n<p>Lint 因此而诞生。</p>\n<h2 id=\"Eslint-的含义\"><a href=\"#Eslint-的含义\" class=\"headerlink\" title=\"Eslint 的含义\"></a>Eslint 的含义</h2><p>Lint 是检验代码格式工具的一个统称，具体的工具有 <code>Jslint</code> 、 <code>Eslint</code> 等等 ………..</p>\n<p>我们可以形象地将 Lint 看成是电商行业，而电商行业具体表现有淘宝（Eslint）、京东（Jslint）等。</p>\n<h1 id=\"使用-Eslint\"><a href=\"#使用-Eslint\" class=\"headerlink\" title=\"使用 Eslint\"></a>使用 Eslint</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>确保你的电脑安装了 node 和 npm 环境</p></blockquote>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p><code>npm init</code> 指令会在项目根目录下生成 <code>package.json</code> 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ d:</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> d:</span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span> test-eslint</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> test-eslint</span><br><span class=\"line\">$ npm init</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h2><p><code>--save-dev</code> 会把 eslint 安装到 package.json 文件中的 devDependencies 属性中，意思是只是开发阶段用到这个包，上线时就不需要这个包了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install eslint --save-dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置-package-json-文件\"><a href=\"#设置-package-json-文件\" class=\"headerlink\" title=\"设置 package.json 文件\"></a>设置 package.json 文件</h2><p>打开 package.json 文件，修改 script 属性如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-scripts test --env=jsdom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;lint&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint src&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;lint:create&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint --init&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>script 属性的意思是脚本，使用方法是在 cmd 窗口中输入 <code>npm run 指令</code> 的形式，如：<code>npm run lint:create</code>；</li>\n<li><code>&quot;lint:create&quot;: &quot;eslint --init&quot;</code> 这个脚本是为了生成 .eslintrc.js 文件，在介绍 Lint 的时候说到 Lint 应该提供编码规范，规范写在哪里，就写在这个文件，所以我们需要创建它；</li>\n<li><code>&quot;lint&quot;: &quot;eslint src&quot;</code> 在介绍 Lint 的时候也说到 Lint 应该提供自动校验代码的程序，这个脚本是让 Lint 自动检验 src 目录下所有的 .js 文件。</li>\n</ul>\n<h2 id=\"创建-eslint-js-文件\"><a href=\"#创建-eslint-js-文件\" class=\"headerlink\" title=\"创建 .eslint.js 文件\"></a>创建 .eslint.js 文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run lint:create</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 20170811@0.1.0 lint:create D:\\code\\<span class=\"built_in\">test</span>\\20170811</span><br><span class=\"line\">&gt; eslint --init</span><br><span class=\"line\"></span><br><span class=\"line\">? How would you like to configure ESLint? Answer questions about your style // 以问答的形式创建配置文件</span><br><span class=\"line\">? Are you using ECMAScript 6 features? Yes      // 是否校验 Es6 语法</span><br><span class=\"line\">? Are you using ES6 modules? Yes                // 是否校验 Es6 模块语法</span><br><span class=\"line\">? Where will your code run? Browser             // 代码运行环境，Browser 指浏览器</span><br><span class=\"line\">? Do you use CommonJS? Yes                      // 是否校验 CommonJs 语法</span><br><span class=\"line\">? Do you use JSX? Yes                           // 是否校验 JSX 语法</span><br><span class=\"line\">? Do you use React? Yes                         // 是否校验 React 语法</span><br><span class=\"line\">? What style of indentation <span class=\"keyword\">do</span> you use? Tabs    // 首行空白选择 Tab 键还是 Space</span><br><span class=\"line\">? What quotes <span class=\"keyword\">do</span> you use <span class=\"keyword\">for</span> strings? Double    // 字符串使用单引号 <span class=\"string\">&#x27;string&#x27;</span> 还是双引号 <span class=\"string\">&quot;string&quot;</span></span><br><span class=\"line\">? What line endings <span class=\"keyword\">do</span> you use? Windows         // 操作系统</span><br><span class=\"line\">? Do you require semicolons? Yes                // 每行代码结尾是否校验加分号 ;</span><br><span class=\"line\">? What format <span class=\"keyword\">do</span> you want your config file to be <span class=\"keyword\">in</span>? JavaScript     // 以 .js 格式生成配置文件</span><br><span class=\"line\">Installing eslint-plugin-react@latest   // 因为要校验 Reac 语法，所以这里需要下载一个 React 语法规则的包</span><br></pre></td></tr></table></figure>\n\n<p>创建完成后根目录下应该会出现 <code>.eslintrc.js</code> 文件</p>\n<h2 id=\"创建-index-js-文件\"><a href=\"#创建-index-js-文件\" class=\"headerlink\" title=\"创建 index.js 文件\"></a>创建 index.js 文件</h2><p>在根目录下创建 src&#x2F;index.js 文件，内容如下，接下来就使用 Eslint 来检验这个 .js 文件是否符合编码规范。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> lint = <span class=\"string\">&#x27;eslint&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>此时的目录结构应该为：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- test-eslint</span><br><span class=\"line\">    + <span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\">    + package<span class=\"selector-class\">.json</span></span><br><span class=\"line\">    - <span class=\"attribute\">src</span></span><br><span class=\"line\">        + index<span class=\"selector-class\">.js</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"校验代码\"><a href=\"#校验代码\" class=\"headerlink\" title=\"校验代码\"></a>校验代码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run lint</span><br><span class=\"line\"></span><br><span class=\"line\">    1:7   error  <span class=\"string\">&#x27;lint&#x27;</span> is assigned a value but never used  no-unused-vars</span><br><span class=\"line\">    1:14  error  Strings must use doublequote               quotes</span><br><span class=\"line\">    1:22  error  Missing semicolon                          semi</span><br><span class=\"line\"></span><br><span class=\"line\">    3 problems (3 errors, 0 warnings)</span><br><span class=\"line\">    2 errors, 0 warnings potentially fixable with the `--fix` option.</span><br></pre></td></tr></table></figure>\n\n<p>这里报了三个错误，分别是：</p>\n<ul>\n<li>index.js 第1行第7个字符，报错编码规则为 <code>no-unused-vars</code>：变量 lint 只定义了，但是未使用；</li>\n<li>index.js 第1行第14个字符，报错编码规则为 <code>quotes</code>：编码规范字符串只能使用双引号，这里却使用了单引号；</li>\n<li>index.js 第1行第22个字符，报错编码规则为 <code>semi</code>：编码规范每行代码结尾必须加分号，这里没有加分号。</li>\n</ul>\n<p>当我们熟悉了编码规范之后，只需进行响应的修改就可以使代码形成统一的风格。刚开始如果对编码规范具体某一条规则不了解的话，可以在 <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/rules/\">eslint规则表</a> 查看用法。（不建议去背规则表，而是用到什么查什么，把它当成字典来用，不那么累）</p>\n<h2 id=\"设置-–fix-参数\"><a href=\"#设置-–fix-参数\" class=\"headerlink\" title=\"设置 –fix 参数\"></a>设置 –fix 参数</h2><p>打开 package.json 文件，修改 script 属性如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-scripts test --env=jsdom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;lint&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint src --fix&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;lint:create&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint --init&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>说明：这里给 <code>&quot;lint&quot;: &quot;eslint src --fix&quot;,</code> 加上 <code>--fix</code> 参数，是 Eslint 提供的自动修复基础错误的功能。</p>\n<p>此时运行 <code>npm run lint</code> 会看到少了两条报错信息，并不是说编码规范变了，而是 Eslint 自动修复了基础错误，打开 index.js 文件，可看到字符串自动变成了双引号，并且代码末尾也加上了分号。可惜的是 –fix 只能修复基础的不影响代码逻辑的错误，像 no-unused-vars 这种错误只能手动修改。</p>\n<h1 id=\"配置文件讲解\"><a href=\"#配置文件讲解\" class=\"headerlink\" title=\"配置文件讲解\"></a>配置文件讲解</h1><p>按照上述操作，会生成默认 <code>.eslintrc.js</code> 配置文件，内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .eslintrc.js </span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;env&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;browser&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;commonjs&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;es6&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;extends&quot;</span>: <span class=\"string\">&quot;eslint:recommended&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;parserOptions&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;ecmaFeatures&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;experimentalObjectRestSpread&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;jsx&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;sourceType&quot;</span>: <span class=\"string\">&quot;module&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;react&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;rules&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;indent&quot;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;tab&quot;</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">&quot;linebreak-style&quot;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;windows&quot;</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">&quot;quotes&quot;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;double&quot;</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"string\">&quot;semi&quot;</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;always&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该文件导出一个对象，对象包含属性 <code>env</code>、<code>extends</code>、<code>parserOptions</code>、<code>plugins</code>、<code>rules</code> 五个属性，作为刚学习 Eslint 的新手，我们总是想要竭尽所能的详细了解每一个属性是什么，干嘛用的，以获取小小的安全感。</p>\n<h2 id=\"env、parserOptions、plugins\"><a href=\"#env、parserOptions、plugins\" class=\"headerlink\" title=\"env、parserOptions、plugins\"></a>env、parserOptions、plugins</h2><p>这三个放在一起将是因为你只需要知道它们是干嘛的：我的程序里要用到 ES6 、React 、JSX 语法，这几个属性就是让 Eslint 能够检验到这些语法的。其余的你不需要知道更多的哪怕一丢丢的东东了。</p>\n<p>作者在学习之初在这块浪费了很多时间，官方文档看了很多遍，大多不能理解什么意思，后来想它既然提供这么一个自动生成配置文件的工具，并且是命令行交互的方式，我只需要告诉它我要用 ES6 、React 、JSX 语法，它会自动进行相关配置满足我的要求即可。</p>\n<h2 id=\"extends\"><a href=\"#extends\" class=\"headerlink\" title=\"extends\"></a>extends</h2><p>前面一直说检验代码遵循编码规范，那到底是什么规范呢。</p>\n<p>值为 “eslint:recommended” 的 extends 属性启用一系列核心规则，这些规则是经过前人验证的最佳实践（所谓最佳实践，就是大家伙都觉得应该遵循的编码规范），<strong>想知道最佳实践具体有哪些编码规范</strong>，可以在 <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/rules/\">eslint规则表</a>  中查看被标记为 √ 的规则项。</p>\n<p>如果觉得官方提供的默认规则不好用，可以自定义规则配置文件，然后发布成 Npm 包，eslint-config-airbnb 就是别人自定义的编码规范，使用 npm 安装后，在我们自己的 .eslintrc.js 中进行配置 “extends”: “airbnb”，eslint-config 这个前缀可以省略不写，这样我们就使用了 eslint-config-airbnb 中的规则，而不是官方的规则 “extends”:”eslint:recommended” 了。关于如何创建自定义规则配置并共享可以参考： <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/developer-guide/shareable-configs\">如何自定义规则配置</a></p>\n<p>关于 “airbnb” 编码规范说两句，在接触到大多数开源项目中，大多数的作者都会使用 “airbnb” 编码规范而不是 官方的 “extends”: “eslint:recommended” 编码规范。</p>\n<p>如果我们觉得 eslint-config-airbnb 规则配置中个别规则并不符合当前项目的要求，可以直接在 .eslintrc.js 配置 rules 属性，优先级高于共享规则 airbnb。</p>\n<h2 id=\"rules\"><a href=\"#rules\" class=\"headerlink\" title=\"rules\"></a>rules</h2><p>配置文件也生成了，我们怎么知道我们的系统会遵循什么规则呢？？</p>\n<p>在前面的列子中，使用 <code>npm run lint</code> 校验出了三处错误，假如我们的项目中字符串就是要使用单引号而不是双引号，代码结尾就是要不加分号才好看，变量就是定义了可能不会使用，我们可以通过设置 rules 来定义我们自己的编码规范，即规则。</p>\n<p>ESLint 附带有大量的规则，修改规则应遵循如下要求：</p>\n<ul>\n<li>“off” 或 0 - 关闭规则</li>\n<li>“warn” 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</li>\n<li>“error” 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)</li>\n</ul>\n<p>有的规则没有属性，只需控制是开启还是关闭，像这样：”eqeqeq”: “off”，有的规则有自己的属性，使用起来像这样：”quotes”: [“error”, “double”]，具体有没有自带属性，可查看 <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/rules/\">eslint规则表</a>。</p>\n<p>修改 .eslintrc.js 文件中的 rules 属性：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;rules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;indent&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;error&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"string\">&quot;tab&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;linebreak-style&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;error&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"string\">&quot;windows&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;quotes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;error&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"string\">&quot;single&quot;</span>        <span class=\"comment\">// 改成字符串必须由单引号括起来而不是双引号，&#x27;string&#x27;不报错，&quot;string&quot;报错</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;semi&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;error&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"string\">&quot;never&quot;</span>         <span class=\"comment\">// 改成代码结尾不再加分号，加了分号报错，不加分号不报错</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;no-unused-vars&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span> <span class=\"comment\">// 0 相当于 off，表示关闭规则，相当于不再校验这条规则：变量定义了必须使用</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>此时再使用 <code>npm run lint</code> 进行代码校验，没有报错就说明校验通过，代码符合统一编码规范。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\code\\<span class=\"built_in\">test</span>\\20170811&gt;npm run lint</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 20170811@0.1.0 lint D:\\code\\<span class=\"built_in\">test</span>\\20170811</span><br><span class=\"line\">&gt; eslint src</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">D:\\code\\<span class=\"built_in\">test</span>\\20170811&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"可能存在的疑问\"><a href=\"#可能存在的疑问\" class=\"headerlink\" title=\"可能存在的疑问\"></a>可能存在的疑问</h2><p>刚接触 ESlint ，并不清楚有哪些规则怎么办，要去 <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/rules/\">eslint规则表</a> 一条条记忆吗？答案是 no。</p>\n<p>个人认为 ESlint 的配置文件并不是一次性完成的，而是在项目过程中慢慢完善的。你可以放心大胆的先进行编码，然后使用 <code>npm run lint</code> 校验代码的编码规范，如果这时候报错，可以在报错信息中知道是哪一条编码规范报错了，你可能并不认识它们，此时去 <a href=\"https://links.jianshu.com/go?to=http://eslint.cn/docs/rules/\">eslint规则表</a> 查询相应规则的使用方法，如：<code>no-unused-vars</code>，从而进一步确定项目中是否需要这条编码规范，如果需要，进行局部调整即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm run lint</span><br><span class=\"line\"></span><br><span class=\"line\">    1:7   error  <span class=\"string\">&#x27;lint&#x27;</span> is assigned a value but never used  no-unused-vars</span><br><span class=\"line\">    1:14  error  Strings must use doublequote               quotes</span><br><span class=\"line\">    1:22  error  Missing semicolon                          semi</span><br><span class=\"line\"></span><br><span class=\"line\">    3 problems (3 errors, 0 warnings)</span><br><span class=\"line\">    2 errors, 0 warnings potentially fixable with the `--fix` option.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"更新部分\"><a href=\"#更新部分\" class=\"headerlink\" title=\"更新部分\"></a>更新部分</h1><h2 id=\"全局变量配置。\"><a href=\"#全局变量配置。\" class=\"headerlink\" title=\"全局变量配置。\"></a>全局变量配置。</h2><p>如使用 window 对象，默认情况下会报 no-undef 的错误，需要在 .eslintrc 中进行相应配置。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;rules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;globals&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;window&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"单行跳过-lint-校验\"><a href=\"#单行跳过-lint-校验\" class=\"headerlink\" title=\"单行跳过 lint 校验\"></a>单行跳过 lint 校验</h2><p>在实际编码时，可能会出现以下的代码。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> apple = <span class=\"string\">&quot;apple&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> balana = <span class=\"string\">&quot;balana&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">fruit</span>: balana ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在最上面定义了两个变量，在底部的配置文件中只可能用到其中一个变量，另一个用不到的在 eslint 校验时就会报错 <code>no-unused-vars</code> 的错误，意思是变量定义了但是没有被用到。</p>\n<p>其中一种解决方案是在 .eslintrc 文件中配置 rules <code>no-unused-vars: 0</code>，意思是项目中不检验变量定义未使用这条规则。强烈不建议这样做，这个规则十分有用，可以规避编写代码时遗漏的变量。</p>\n<p>另一种解决方案就是使用行内注释跳过对 apple 和 balana 两个变量跳过 eslint 校验，只影响这两个变量，不影响外部。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> apple = <span class=\"string\">&quot;apple&quot;</span>;  <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> balana = <span class=\"string\">&quot;balana&quot;</span>;  <span class=\"comment\">// eslint-disable-line</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">fruit</span>: balana ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此时使用 eslint 校验时就不会再报错了。</p>\n<h2 id=\"常见规则含义解释\"><a href=\"#常见规则含义解释\" class=\"headerlink\" title=\"常见规则含义解释\"></a>常见规则含义解释</h2><ul>\n<li><code>object-shorthand</code> 设置该规则，表示<a href=\"https://links.jianshu.com/go?to=http://es6.ruanyifeng.com/%23docs/object%23%E5%B1%9E%E6%80%A7%E7%9A%84%E7%AE%80%E6%B4%81%E8%A1%A8%E7%A4%BA%E6%B3%95\">对象属性要简写</a>。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;<span class=\"attr\">x</span>: x&#125;;    <span class=\"comment\">// 会报错</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = &#123;<span class=\"attr\">a</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;&#125;;  <span class=\"comment\">// 会报错</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;x&#125;;    <span class=\"comment\">// 不会报错</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = &#123;a () &#123;&#125;&#125;;    <span class=\"comment\">// 不会报错</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>prefer-arrow-callback</code> 要求回调函数使用箭头函数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 回调函数，函数的参数是个函数，这个参数函数就是回调函数</span></span><br><span class=\"line\">funciton bar () &#123;&#125;      <span class=\"comment\">// 不是回调函数，不会报错</span></span><br><span class=\"line\"><span class=\"comment\">// setTimeout 的第一个参数就是回调函数，不用箭头函数会报错</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// .......</span></span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>no-param-reassign</code> 禁止对函数的参数重新赋值</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">bar</span> (&#123; data = &#123;&#125; &#125;) &#123;</span><br><span class=\"line\">    data.<span class=\"property\">num</span> = <span class=\"number\">12</span>;      <span class=\"comment\">// 会报错</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">虽然报错，又不想要将该校验关闭，如果代码中只有 data 这个属性有这种情形，</span></span><br><span class=\"line\"><span class=\"comment\">可以在 .eslintrc.js 中的 rules 属性中添加配置（可忽略 data 属性做此校验）：</span></span><br><span class=\"line\"><span class=\"comment\">&#x27;no-param-reassign&#x27;: [&#x27;error&#x27;, &#123; &#x27;props&#x27;: true, &#x27;ignorePropertyModificationsFor&#x27;: [&#x27;data&#x27;] &#125;],</span></span><br><span class=\"line\"><span class=\"comment\">&#x27;no-param-reassign&#x27;: 0,  // 关闭该属性校验</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>no-trailing-spaces</code> 禁止行尾空格</li>\n<li><code>no-shadow</code> 禁止变量声明与外层作用域的变量同名</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span> (num) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">2</span>;    <span class=\"comment\">// 报错，因为 num 变量作为参数已经申明过了</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用的几个规则\"><a href=\"#常用的几个规则\" class=\"headerlink\" title=\"常用的几个规则\"></a>常用的几个规则</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;quotes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;single&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>            # 单引号</span><br><span class=\"line\"><span class=\"attr\">&quot;quote-props&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;as-needed&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>     # 双引号自动变单引号</span><br><span class=\"line\"><span class=\"attr\">&quot;semi&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;never&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>               # 一行结尾不要写分号</span><br><span class=\"line\"><span class=\"attr\">&quot;comma-dangle&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;always-multiline&quot;</span><span class=\"punctuation\">]</span>  # 对象或数组多行写法时，最后一个值加逗号</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue需要配置eslint-plugin-vue\"><a href=\"#Vue需要配置eslint-plugin-vue\" class=\"headerlink\" title=\"Vue需要配置eslint-plugin-vue\"></a>Vue需要配置eslint-plugin-vue</h3><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev eslint-plugin-vue</span><br></pre></td></tr></table></figure>\n\n<p>配置代码规范</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;extends&quot;</span>: [<span class=\"string\">&quot;plugin:vue/recommended&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n","text":"Eslint 是什么编码规范每个程序员都有自己的编码习惯，最常见的莫过于： 有的人写代码一行代码结尾必须加分号 ;，有的人觉得不加分号 ; 更好看； 有的人写代...","permalink":"/post/其他/Eslint/eslint入门笔记","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"Eslint","slug":"Eslint","count":1,"path":"api/tags/Eslint.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Eslint-%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">Eslint 是什么</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">编码规范</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lint-%E7%9A%84%E5%90%AB%E4%B9%89\"><span class=\"toc-text\">Lint 的含义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Eslint-%E7%9A%84%E5%90%AB%E4%B9%89\"><span class=\"toc-text\">Eslint 的含义</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-Eslint\"><span class=\"toc-text\">使用 Eslint</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">创建项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%8C%85\"><span class=\"toc-text\">安装依赖包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE-package-json-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">设置 package.json 文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-eslint-js-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建 .eslint.js 文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-index-js-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建 index.js 文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%A1%E9%AA%8C%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">校验代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE-%E2%80%93fix-%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">设置 –fix 参数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AE%B2%E8%A7%A3\"><span class=\"toc-text\">配置文件讲解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#env%E3%80%81parserOptions%E3%80%81plugins\"><span class=\"toc-text\">env、parserOptions、plugins</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#extends\"><span class=\"toc-text\">extends</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#rules\"><span class=\"toc-text\">rules</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E7%9A%84%E7%96%91%E9%97%AE\"><span class=\"toc-text\">可能存在的疑问</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E9%83%A8%E5%88%86\"><span class=\"toc-text\">更新部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E3%80%82\"><span class=\"toc-text\">全局变量配置。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%8C%E8%B7%B3%E8%BF%87-lint-%E6%A0%A1%E9%AA%8C\"><span class=\"toc-text\">单行跳过 lint 校验</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E8%A7%84%E5%88%99%E5%90%AB%E4%B9%89%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">常见规则含义解释</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E4%B8%AA%E8%A7%84%E5%88%99\"><span class=\"toc-text\">常用的几个规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AEeslint-plugin-vue\"><span class=\"toc-text\">Vue需要配置eslint-plugin-vue</span></a></li></ol></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Jest入门笔记","uid":"cb05db90efeecb5af5d994efc32f8989","slug":"其他/Jest/Jest入门笔记","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/其他/Jest/Jest入门笔记.json","keywords":null,"cover":[],"text":"1. 介绍Jest是 Facebook 的一套开源的 JavaScript 测试框架， 它自动集成了断言、JSDom、覆盖率报告等开发者所需要的所有测试工具，是...","permalink":"/post/其他/Jest/Jest入门笔记","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Jest","slug":"Jest","count":3,"path":"api/tags/Jest.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"开始","uid":"075200b24f3b143c5139f73a1f31aa8b","slug":"源码阅读笔记/vue/开始","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/源码阅读笔记/vue/开始.json","keywords":null,"cover":null,"text":"从入口开始我们之前提到过 Vue.js 构建过程，在 web 应用下，我们来分析 Runtime + Compiler 构建出来的 Vue.js，它的入口是 s...","permalink":"/post/源码阅读笔记/vue/开始","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":7,"path":"api/tags/vue.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}