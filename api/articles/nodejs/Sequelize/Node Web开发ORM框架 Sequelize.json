{"title":"Node Web开发ORM框架 Sequelize","uid":"1165eaf05b864098a8be158dfcace9b9","slug":"nodejs/Sequelize/Node Web开发ORM框架 Sequelize","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:34.000Z","comments":true,"path":"api/articles/nodejs/Sequelize/Node Web开发ORM框架 Sequelize.json","keywords":null,"cover":[],"content":"<h1 id=\"Node-Web开发ORM框架-Sequelize\"><a href=\"#Node-Web开发ORM框架-Sequelize\" class=\"headerlink\" title=\"Node Web开发ORM框架 Sequelize\"></a>Node Web开发ORM框架 Sequelize</h1><h3 id=\"一、什么是-ORM？\"><a href=\"#一、什么是-ORM？\" class=\"headerlink\" title=\"一、什么是 ORM？\"></a>一、什么是 ORM？</h3><p>首先看下维基百科上的定义，ORM 是「对象关系映射」的翻译，英语全称为Object Relational Mapping，它是一种程序设计技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用的「虚拟对象数据库」。</p>\n<p>随着面向对象软件开发方法的发展，ORM 的概念应运而生，它用来把对象模型表示的对象，映射到基于 SQL 的关系模型数据库结构中去。这样，我们在具体的操作实体数据库的时候，就不需要再去和复杂的 SQL 语句打交道，只需简单的操作实体对象的属性和方法，就可以达到操作数据库的效果。</p>\n<p>ORM 技术是在对象和数据库之间提供了一条桥梁，前台的对象型数据和数据库中的关系型的数据通过这个桥梁来相互转化。</p>\n<p>不同的编程语言，有不同的ORM框架。例如Java，它的ORM框架就有：Hibernate，Ibatis&#x2F;Mybatis等等。在Node Web开发中，<a href=\"http://docs.sequelizejs.com/manual/installation/getting-started.html\">Sequelize</a> 就是一款比较流行的 ORM 框架。</p>\n<h3 id=\"二、Sequelize-初步使用\"><a href=\"#二、Sequelize-初步使用\" class=\"headerlink\" title=\"二、Sequelize 初步使用\"></a>二、Sequelize 初步使用</h3><p>在 Node Web 开发过程中，后台数据库我一直使用的都是 Mysql。起初在做 Node Web 开发的时候，都是提前在 Mysql 图形界面里创建好数据表，然后再开始实际开发，这个过程一直穿插在整个项目的开发过程中。一个人在一台机器上，做全栈的开发，这个过程可能并不会出现什么问题，因为数据表结构以及整个项目代码都在一台电脑上，不管你怎么修改，都是一套代码，一个数据库结构。</p>\n<p>然而，当你需要在多台电脑之间协同工作的时候，你就会发现这种方式的弊端。比如在A电脑上修改了数据表结构之后，接着去B电脑上继续编码，我们虽然能通过Git同步代码，但是数据表结构却无法同步过去，我们就需要在B电脑上，手动将数据库结构维护成一致，否则无法接着进行。这种操作方式非常的不方便，而且很LOW。</p>\n<p>而 Sequelize 框架就能很好的解决这个问题，通过 Sequelize 框架，我们将每个数据表直接定义为数据模型，通过调用数据模型的一些方法，就可以直接操作数据库，甚至是同步数据表结构。好了，废话不多说了，直接上手实战。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>PS. 下面我会介绍，我在实际开发中的一些实用技巧，而不会逐条介绍增删改查的使用。所以增删改查的基本使用，建议直接查看<a href=\"http://docs.sequelizejs.com/\">官方文档</a>。</p></blockquote>\n<h4 id=\"1-创建连接对象，并模块化\"><a href=\"#1-创建连接对象，并模块化\" class=\"headerlink\" title=\"1. 创建连接对象，并模块化\"></a>1. 创建连接对象，并模块化</h4><p>新建数据库连接模块<code>dbConn.js</code>，单独提出连接数据库的对象<code>sequelize</code>，如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Sequelize</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 数据库配置文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sqlConfig = &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&quot;localhost&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">user</span>: <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: <span class=\"string\">&quot;Lupeng1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">database</span>: <span class=\"string\">&quot;example-sequelize&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(sqlConfig.<span class=\"property\">database</span>, sqlConfig.<span class=\"property\">user</span>, sqlConfig.<span class=\"property\">password</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: sqlConfig.<span class=\"property\">host</span>,</span><br><span class=\"line\">    <span class=\"attr\">dialect</span>: <span class=\"string\">&#x27;mysql&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pool</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">max</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">        <span class=\"attr\">min</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">idle</span>: <span class=\"number\">10000</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = sequelize;</span><br></pre></td></tr></table></figure>\n\n<p>我们根据数据库的一些参数，创建了<code>sequelize</code>数据库连接模块，并对外引用。</p>\n<h4 id=\"2-定义数据表结构，将表结构写进代码里\"><a href=\"#2-定义数据表结构，将表结构写进代码里\" class=\"headerlink\" title=\"2. 定义数据表结构，将表结构写进代码里\"></a>2. 定义数据表结构，将表结构写进代码里</h4><p>建议每个表对应一个文档，放入项目的单独目录下，例如我通常放进了<code>/db/models</code>下，这里拿我创建的一个<code>todolist</code>表来做示例，在<code>models</code>目录中创建<code>todolist.js</code>文件，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Sequelize</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./dbConn.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> todolist = sequelize.<span class=\"title function_\">define</span>(<span class=\"string\">&#x27;todolist&#x27;</span>,&#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">BIGINT</span>(<span class=\"number\">11</span>),</span><br><span class=\"line\">        <span class=\"attr\">primaryKey</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">unique</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">autoIncrement</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">100</span>),          <span class=\"comment\">// 标题</span></span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">500</span>),        <span class=\"comment\">// 详细内容</span></span><br><span class=\"line\">    <span class=\"attr\">priority</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">INTEGER</span>,          <span class=\"comment\">// 级别</span></span><br><span class=\"line\">    <span class=\"attr\">owner</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,              <span class=\"comment\">// 承接人</span></span><br><span class=\"line\">    <span class=\"attr\">officer</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,             <span class=\"comment\">// 负责人</span></span><br><span class=\"line\">    <span class=\"attr\">startDate</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,         <span class=\"comment\">// 开始时间</span></span><br><span class=\"line\">    <span class=\"attr\">planFinishDate</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,     <span class=\"comment\">// 计划完成时间</span></span><br><span class=\"line\">    <span class=\"attr\">realFinishDate</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,     <span class=\"comment\">// 实际完成时间</span></span><br><span class=\"line\">    <span class=\"attr\">bz</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">500</span>),               <span class=\"comment\">// 备注</span></span><br><span class=\"line\">    <span class=\"attr\">state</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">INTEGER</span>,            <span class=\"comment\">// 状态</span></span><br><span class=\"line\">    <span class=\"attr\">createdAt</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">BIGINT</span>,</span><br><span class=\"line\">    <span class=\"attr\">updatedAt</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">BIGINT</span>,</span><br><span class=\"line\">    <span class=\"attr\">createUser</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\">    <span class=\"attr\">updateUser</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\">    <span class=\"attr\">version</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">BIGINT</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    <span class=\"attr\">timestamps</span>: <span class=\"literal\">false</span>               <span class=\"comment\">// 不要默认时间戳</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = todolist;</span><br></pre></td></tr></table></figure>\n\n<p>以上代码，直接引入之前创建的<code>sequelize</code>对象，然后使用<code>defind</code>方法定义数据表结构。其他的所有数据表都可以通过这种方式来定义，保存在每一个独立的文件中，引出数据模模型即可。</p>\n<h4 id=\"3-同步数据表结构\"><a href=\"#3-同步数据表结构\" class=\"headerlink\" title=\"3. 同步数据表结构\"></a>3. 同步数据表结构</h4><p>这个就简单了，在<code>/db</code>目录下，新建<code>syncTable.js</code>，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> todolist = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/todolist.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同步表结构</span></span><br><span class=\"line\">todolist.<span class=\"title function_\">sync</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">force</span>: <span class=\"literal\">true</span>  <span class=\"comment\">// 强制同步，先删除表，然后新建</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>当我们换台电脑继续项目的时候，不用手动去同步数据表结构了，只需要执行一下该文件就可以了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node db/syncTable.js</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-创建一些初始数据\"><a href=\"#4-创建一些初始数据\" class=\"headerlink\" title=\"4. 创建一些初始数据\"></a>4. 创建一些初始数据</h4><p>我们同样可以创建一个方法，用来初始化一些基础数据，如下<code>initData.js</code>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> priority = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/priority.js&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建u_priority表的基础数据</span></span><br><span class=\"line\">priority.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;重要 紧急&#x27;</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">p</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;created. &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(p));</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;failed: &#x27;</span> + err);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>给<code>prioritys</code>表里创建一些初始数据，默认表名会添加s，定义表的时候可以通过<code>tableName</code>属性值来定义对应的表名，如下示例将表名定义为<code>u_priority</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> priority = sequelize.<span class=\"title function_\">define</span>(<span class=\"string\">&#x27;priority&#x27;</span>,&#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">BIGINT</span>(<span class=\"number\">11</span>),</span><br><span class=\"line\">        <span class=\"attr\">primaryKey</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">autoIncrement</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    <span class=\"attr\">timestamps</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">tableName</span>: <span class=\"string\">&#x27;u_priority&#x27;</span>  <span class=\"comment\">// 数据表名为u_priority</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>Sequelize</code> 的初步使用，就介绍到这里。接下来，通过实际项目示例，再深入了解一下 <code>Sequelize</code> 的其他功效。</p>\n<h3 id=\"三、实际项目示例\"><a href=\"#三、实际项目示例\" class=\"headerlink\" title=\"三、实际项目示例\"></a>三、实际项目示例</h3><h4 id=\"1-协同开发规范\"><a href=\"#1-协同开发规范\" class=\"headerlink\" title=\"1. 协同开发规范\"></a>1. 协同开发规范</h4><p>实际项目中，直接面临的一个问题就是<strong>协同规范</strong>的问题，例如，数据表名命名的规则，是采用默认方案，直接在后面加s，变成<code>prioritys</code>，还是改成<code>u_priority</code>；还有，每个表是否要加时间戳，或者其他一些通用字段。</p>\n<p>如果没有规范，那么同一个项目中，数据表的形式就会百花齐放了，这是个人开发习惯问题，并不是错误。所以，当在做协同开发的时候，我们非常有必要定义一个标准接口，大家通过统一的标准调用方法建立模型，这样就形成一种内部规范。我们把所有需要规范的内容，全部封装在一个对象里，例如我们这样改写<code>dbConn.js</code>文件。</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Sequelize</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 数据库配置文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sqlConfig = &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&quot;localhost&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">user</span>: <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: <span class=\"string\">&quot;Lupeng1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">database</span>: <span class=\"string\">&quot;example-sequelize&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;init sequelize...&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;mysql: &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(sqlConfig));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(sqlConfig.<span class=\"property\">database</span>, sqlConfig.<span class=\"property\">user</span>, sqlConfig.<span class=\"property\">password</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: sqlConfig.<span class=\"property\">host</span>,</span><br><span class=\"line\">    <span class=\"attr\">dialect</span>: <span class=\"string\">&#x27;mysql&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pool</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">max</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">        <span class=\"attr\">min</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">idle</span>: <span class=\"number\">10000</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">timezone</span>: <span class=\"string\">&#x27;+08:00&#x27;</span> <span class=\"comment\">//东八时区</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">sequelize</span> = sequelize;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">defineModel</span> = <span class=\"keyword\">function</span> (<span class=\"params\">name, attributes</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> attrs = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> attributes) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> value = attributes[key];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; value[<span class=\"string\">&#x27;type&#x27;</span>]) &#123;</span><br><span class=\"line\">            value.<span class=\"property\">allowNull</span> = value.<span class=\"property\">allowNull</span> || <span class=\"literal\">false</span>;</span><br><span class=\"line\">            attrs[key] = value;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            attrs[key] = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>: value,</span><br><span class=\"line\">                <span class=\"comment\">// allowNull: false</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    attrs.<span class=\"property\">version</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">BIGINT</span>,</span><br><span class=\"line\">        <span class=\"comment\">// allowNull: false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    attrs.<span class=\"property\">createUser</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\">        <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    attrs.<span class=\"property\">updateUser</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\">        <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sequelize.<span class=\"title function_\">define</span>(name, attrs, &#123;</span><br><span class=\"line\">        <span class=\"attr\">tableName</span>: name,</span><br><span class=\"line\">        <span class=\"attr\">timestamps</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">paranoid</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">        <span class=\"attr\">charset</span>: <span class=\"string\">&#x27;utf8mb4&#x27;</span>, </span><br><span class=\"line\">        <span class=\"attr\">collate</span>: <span class=\"string\">&#x27;utf8mb4_general_ci&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">hooks</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">beforeBulkCreate</span>: <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>)&#123;</span><br><span class=\"line\">                obj.<span class=\"property\">version</span> = <span class=\"number\">0</span> ;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">beforeValidate</span>: <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(obj.<span class=\"property\">isNewRecord</span>)&#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;first&#x27;</span>);</span><br><span class=\"line\">                    obj.<span class=\"property\">version</span> = <span class=\"number\">0</span> ; </span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;not first&#x27;</span>);</span><br><span class=\"line\">                    obj.<span class=\"property\">version</span> = obj.<span class=\"property\">version</span> + <span class=\"number\">1</span> ;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>我们在<code>dbConn.js</code>中，定义了<code>defineModel</code>方法，这个方法中，我们规范了，每个模型都要添加<code>version</code>、<code>createUser</code>以及<code>updateUser</code>三个字段、表名即为模型名，以及数据的字符集为<code>utf8mb4</code>等等。那么，当我们要创建模型的时候，通过调用<code>defineModel</code>方法就可以达到统一规范的效果。如下模型代码：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Sequelize</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> db = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../dbConn.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = db.<span class=\"title function_\">defineModel</span>(<span class=\"string\">&#x27;project_master&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">p_id</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">BIGINT</span>(<span class=\"number\">11</span>),</span><br><span class=\"line\">        <span class=\"attr\">primaryKey</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">autoIncrement</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">p_name</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_academy</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_start_date</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_end_date</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_days</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">DECIMAL</span>(<span class=\"number\">10</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_place</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_owner</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_operator</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_is_fee</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">BIGINT</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">    <span class=\"attr\">p_state</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">BIGINT</span>(<span class=\"number\">2</span>),  <span class=\"comment\">// 开启，关闭</span></span><br><span class=\"line\">    <span class=\"attr\">p_bz</span>: <span class=\"title class_\">Sequelize</span>.<span class=\"title function_\">STRING</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这样还有一个好处，那就是在模型定义里，只需要写业务相关的字段，与业务无关的一些通用字段（例如，时间戳等等）就全部放到规范里。业务字段一目了然，显得更加清晰。</p>\n<h4 id=\"2-批量同步数据结构\"><a href=\"#2-批量同步数据结构\" class=\"headerlink\" title=\"2. 批量同步数据结构\"></a>2. 批量同步数据结构</h4><p>上面介绍过，在同步数据结构的时候，我们可以通过<code>sync</code>方法进行同步，这里介绍一种批量同步的方法。正常情况下，我们都会把数据模型放在一个目录下<code>models</code>，于是我们在<code>models</code>目录外，新建一个<code>sync.js</code>文件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./dbConn.js&#x27;</span>).<span class=\"property\">sequelize</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> files = fs.<span class=\"title function_\">readdirSync</span>(__dirname + <span class=\"string\">&#x27;/models&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> js_files = files.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">f</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;.js&#x27;</span>);</span><br><span class=\"line\">&#125;, files);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(js_files);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> f <span class=\"keyword\">of</span> js_files) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`import model from file <span class=\"subst\">$&#123;f&#125;</span>...`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = f.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, f.<span class=\"property\">length</span> - <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>[name] = <span class=\"built_in\">require</span>(__dirname + <span class=\"string\">&#x27;/models/&#x27;</span> + f);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sequelize.<span class=\"title function_\">sync</span>();</span><br></pre></td></tr></table></figure>\n\n<p>该方法的本质其实就是自动找出<code>models</code>目录下，所有以<code>js</code>结尾的文件，引入并执行<code>sync()</code>方法。命令行执行<code>node db/sync.js</code>后，效果如下图：</p>\n<p><img src=\"/media/15983618377928.jpg\"></p>\n<p>再查看数据库情况，可以发现<code>models</code>目录下的所有模型全部创建成功。</p>\n<p><img src=\"/media/15983618726291.jpg\"></p>\n<h4 id=\"3-数据表关系结构\"><a href=\"#3-数据表关系结构\" class=\"headerlink\" title=\"3. 数据表关系结构\"></a>3. 数据表关系结构</h4><p>我们知道数据表的关系有<strong>一对一</strong>，<strong>一对多</strong>以及<strong>多对多</strong>的关系结构。一般 ORM 框架都会提供与之对应的对象方法，当然 Sequelize 也不例外。实战项目，直接上代码说话。新建一个<code>relation.js</code> 文件，用来定义模型之间的关系，代码如下：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 项目表</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ProjectMaster</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/Project-master&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ProjectCost</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/Project-cost&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ProjectState</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/Project-state&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 费用明细表</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">TeachFee</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./models/Detail-teach-fee.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">ProjectMaster</span>.<span class=\"title function_\">hasOne</span>(<span class=\"title class_\">ProjectState</span>, &#123;<span class=\"attr\">foreignKey</span>: <span class=\"string\">&#x27;p_id&#x27;</span>, <span class=\"attr\">as</span>: <span class=\"string\">&#x27;State&#x27;</span>&#125;);</span><br><span class=\"line\"><span class=\"title class_\">ProjectMaster</span>.<span class=\"title function_\">hasOne</span>(<span class=\"title class_\">ProjectCost</span>, &#123;<span class=\"attr\">foreignKey</span>: <span class=\"string\">&#x27;p_id&#x27;</span>, <span class=\"attr\">as</span>: <span class=\"string\">&#x27;Cost&#x27;</span>&#125;);</span><br><span class=\"line\"><span class=\"title class_\">ProjectMaster</span>.<span class=\"title function_\">hasMany</span>(<span class=\"title class_\">TeachFee</span>, &#123;<span class=\"attr\">foreignKey</span>: <span class=\"string\">&#x27;p_id&#x27;</span>, <span class=\"attr\">as</span>: <span class=\"string\">&#x27;TeachFee&#x27;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"title class_\">ProjectMaster</span>: <span class=\"title class_\">ProjectMaster</span>,</span><br><span class=\"line\">    <span class=\"title class_\">ProjectCost</span>: <span class=\"title class_\">ProjectCost</span>,</span><br><span class=\"line\">    <span class=\"title class_\">ProjectState</span>: <span class=\"title class_\">ProjectState</span>,</span><br><span class=\"line\">    <span class=\"title class_\">TeachFee</span>: <span class=\"title class_\">TeachFee</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这里介绍一对一，一对多的关系，示例中，<code>ProjectMaster</code>与<code>ProjectCost</code>, <code>ProjectState</code>是一对一的关系，于是我们使用<code>hasOne</code>的方法，并且指定字段<code>p_id</code>为连接外键。而<code>TeachFee</code>是费用明细表，与项目表是一对多的关系，于是使用<code>hasMany</code>的方法，同样指定外键。</p>\n<p>当定义完数据表关系后，我们重新编辑同步数据表方法，因为我们需要使用新定义的关系模型，新建<code>sync2.js</code>文件，代码如下：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./dbConn.js&#x27;</span>).<span class=\"property\">sequelize</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> relation = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./relation.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"title class_\">ProjectMaster</span>: relation.<span class=\"property\">ProjectMaster</span>,</span><br><span class=\"line\">  <span class=\"title class_\">ProjectCost</span>: relation.<span class=\"property\">ProjectCost</span>,</span><br><span class=\"line\">  <span class=\"title class_\">ProjectState</span>: relation.<span class=\"property\">ProjectState</span>,</span><br><span class=\"line\">  <span class=\"title class_\">TeachFee</span>: relation.<span class=\"property\">TeachFee</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">sequelize.<span class=\"title function_\">sync</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">force</span>: <span class=\"literal\">true</span>      <span class=\"comment\">// 强制同步</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>执行<code>node db/sync2.js</code>后，在表结构中，你会发现出现的外键关联关系。上述代码会在<code>ProjectMaster</code>、<code>ProjectCost</code>以及<code>TeachFee</code>模型对应的数据表中，新增了外键关联。如下状态表的情况。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `project_state` (</span><br><span class=\"line\">  `p_state_id` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">11</span>) NOT <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `p_id` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">11</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_teach` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_place` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_stay` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_catering` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_goods` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_clean` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `p_state_report` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">2</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `version` <span class=\"title function_ invoke__\">bigint</span>(<span class=\"number\">20</span>) DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `createUser` <span class=\"title function_ invoke__\">varchar</span>(<span class=\"number\">255</span>) NOT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `updateUser` <span class=\"title function_ invoke__\">varchar</span>(<span class=\"number\">255</span>) NOT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `createdAt` datetime NOT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `updatedAt` datetime NOT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  `deletedAt` datetime DEFAULT <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"title function_ invoke__\">KEY</span> (`p_state_id`),</span><br><span class=\"line\">  KEY `p_id` (`p_id`),</span><br><span class=\"line\">  CONSTRAINT `project_state_ibfk_1` FOREIGN <span class=\"title function_ invoke__\">KEY</span> (`p_id`) REFERENCES `project_master` (`p_id`) ON DELETE SET <span class=\"literal\">NULL</span> ON UPDATE CASCADE</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br></pre></td></tr></table></figure>\n\n<p>创建完表之后，接下来的问题就是我们如何使用？这里给个建议方案，我们在<code>db</code>目录下，新建一个<code>api</code>的目录，用来存放数据库调用接口。我们把所有对数据库的操作，全部写成方法，供后台路由调用。例如，对项目的查询，删除，修改等等操作，都定义成一个一个的方法。在<code>api</code>目录下，新建<code>projectModel.js</code>文件，用来定义对项目的一些数据库操作。代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sequelize = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../dbConn.js&#x27;</span>).sequelize;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ProjectMaster = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../relation.js&#x27;</span>).ProjectMaster;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ProjectCost = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../relation.js&#x27;</span>).ProjectCost;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ProjectState = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../relation.js&#x27;</span>).ProjectState;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 单表：仅更新项目表</span></span><br><span class=\"line\">    updateProject: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, id, callback</span>)</span>&#123;</span><br><span class=\"line\">        ProjectMaster.<span class=\"title function_ invoke__\">update</span>(data ,&#123;<span class=\"attr\">where</span>: &#123;<span class=\"attr\">p_id</span>: id&#125;&#125;).<span class=\"title function_ invoke__\">then</span>(function(p)&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">callback</span>();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 双表：查找成本表</span></span><br><span class=\"line\">    getCostList: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">start, end, callback</span>)</span>&#123;</span><br><span class=\"line\">        ProjectMaster.<span class=\"title function_ invoke__\">findAll</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">include</span>: [&#123;</span><br><span class=\"line\">                <span class=\"attr\">model</span>: ProjectCost,</span><br><span class=\"line\">                <span class=\"attr\">as</span>: <span class=\"string\">&#x27;Cost&#x27;</span>,</span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">            <span class=\"attr\">where</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">p_start_date</span>: &#123;</span><br><span class=\"line\">                    <span class=\"variable\">$lte</span>: end,</span><br><span class=\"line\">                    <span class=\"variable\">$gte</span>: start</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">order</span>: [sequelize.<span class=\"title function_ invoke__\">literal</span>(<span class=\"string\">&#x27;p_start_date&#x27;</span>)]</span><br><span class=\"line\">        &#125;).<span class=\"title function_ invoke__\">then</span>(function(p)&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">callback</span>(p);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 双表：添加项目，同时在状态表添加项目状态</span></span><br><span class=\"line\">    addProject: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, callback</span>)</span>&#123;</span><br><span class=\"line\">        ProjectMaster.<span class=\"title function_ invoke__\">create</span>(data).<span class=\"title function_ invoke__\">then</span>(function(p)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> state = ProjectState.<span class=\"title function_ invoke__\">build</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">p_state_teach</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_stay</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_catering</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_place</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_goods</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_clean</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">p_state_report</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">createUser</span>: data.createUser,</span><br><span class=\"line\">                <span class=\"attr\">updateUser</span>: data.updateUser,</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            p.<span class=\"title function_ invoke__\">setState</span>(state);</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">callback</span>(p);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>由于对数据库的操作方法较多，这里用3个示例方法来介绍。</p>\n<ol>\n<li>第一个为单表操作，更新项目表。增删改查的一些基本方法，建议查看官方文档；</li>\n<li>第二个为双表联合查询，通过<code>include</code>参数来关联模型，得到的结果中会包含一个<code>Cost</code>对象，包含<code>ProjectCost</code>的模型数据；</li>\n<li>第三个为添加项目的时候，同时添加状态表，这里用到关系模型中的<code>set</code>方法，创建项目主数据表后，通过关联关系，使用<code>set</code>方法自动在State表中insert数据。</li>\n</ol>\n","text":"Node Web开发ORM框架 Sequelize一、什么是 ORM？首先看下维基百科上的定义，ORM 是「对象关系映射」的翻译，英语全称为Object Rel...","permalink":"/post/nodejs/Sequelize/Node Web开发ORM框架 Sequelize","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"Sequelize","slug":"Sequelize","count":3,"path":"api/tags/Sequelize.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Node-Web%E5%BC%80%E5%8F%91ORM%E6%A1%86%E6%9E%B6-Sequelize\"><span class=\"toc-text\">Node Web开发ORM框架 Sequelize</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF-ORM%EF%BC%9F\"><span class=\"toc-text\">一、什么是 ORM？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Sequelize-%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">二、Sequelize 初步使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E8%BF%9E%E6%8E%A5%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">1. 创建连接对象，并模块化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84%EF%BC%8C%E5%B0%86%E8%A1%A8%E7%BB%93%E6%9E%84%E5%86%99%E8%BF%9B%E4%BB%A3%E7%A0%81%E9%87%8C\"><span class=\"toc-text\">2. 定义数据表结构，将表结构写进代码里</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3. 同步数据表结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%BA%9B%E5%88%9D%E5%A7%8B%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4. 创建一些初始数据</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">三、实际项目示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">1. 协同开发规范</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%89%B9%E9%87%8F%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2. 批量同步数据结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%85%B3%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3. 数据表关系结构</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"方法","uid":"ff590af8a3e15078ecfbc463aea307fc","slug":"nodejs/Sequelize/方法","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/nodejs/Sequelize/方法.json","keywords":null,"cover":null,"text":"Sequelize的相关方法查询相关的方法 findOne - 查询一条数据 findAll - 查询多条数据 count - 查询数据条数 参数 where ...","permalink":"/post/nodejs/Sequelize/方法","photos":[],"count_time":{"symbolsCount":85,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Sequelize","slug":"Sequelize","count":3,"path":"api/tags/Sequelize.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Sequelize-typescript","uid":"a8813826449979feb1532bc7da9f4047","slug":"nodejs/Sequelize/Sequelize-typescript","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.999Z","comments":true,"path":"api/articles/nodejs/Sequelize/Sequelize-typescript.json","keywords":null,"cover":null,"text":"定义一个模型12345678910111213141516171819202122232425262728import * as path from 'path...","permalink":"/post/nodejs/Sequelize/Sequelize-typescript","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Sequelize","slug":"Sequelize","count":3,"path":"api/tags/Sequelize.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}