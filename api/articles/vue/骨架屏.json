{"title":"无侵入式骨架屏全自动生成集成方案","uid":"d2e4012e0072758eaaacee76acd79cf3","slug":"vue/骨架屏","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-07T05:22:30.493Z","comments":true,"path":"api/articles/vue/骨架屏.json","keywords":null,"cover":null,"content":"<h1 id=\"无侵入式骨架屏全自动生成集成方案\"><a href=\"#无侵入式骨架屏全自动生成集成方案\" class=\"headerlink\" title=\"无侵入式骨架屏全自动生成集成方案\"></a>无侵入式骨架屏全自动生成集成方案</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>骨架屏是一种在页面数据加载时，先显示页面结构大致轮廓的过渡效果，让用户感知到页面正在加载，同时避免了用户看到空白页面的尴尬。然而，传统的骨架屏实现方式通常需要开发人员手动为每个页面设计并编写骨架屏代码，这不仅增加了开发成本，还可能导致骨架屏效果与真实页面结构不一致，影响用户体验。</p>\n<p>为了解决这些问题，设计出了无侵入式骨架屏全自动生成集成方案。该方案旨在通过自动化工具和技术手段，实现对移动应用页面骨架屏的自动生成和集成，无需开发人员手动编写代码，降低了开发成本，同时保证了骨架屏效果与真实页面结构的一致性，提升了用户体验。</p>\n<h2 id=\"方案介绍\"><a href=\"#方案介绍\" class=\"headerlink\" title=\"方案介绍\"></a>方案介绍</h2><p>该方案适用于vue3+webview的项目，共有四个部分</p>\n<ol>\n<li>vue插件部分，该模块的主要作用是在某个路由打开时（运行时）根据真实页面元素树生成骨架屏节点，并且生成之后准备存储到前端工程中</li>\n<li>Node服务部分，该服务会随着项目运行自动启动一个nodejs服务，该服务监听源码目录文件修改，如果有文件修改，则会接收到前端发送的骨架屏代码。并存储到前端工程中</li>\n<li>Webpack插件部分。此插件的主要作用是加载骨架屏，利用webpack 钩子函数向 index.html 注入一段js代码，这段代码的主要作用是请求当前打开路由对应的骨架屏代码，并且渲染到屏幕上，然后在合适的时机销毁骨架屏。</li>\n<li>骨架屏生成脚本部分，骨架瓶支持两种生成方式，静默生成或者命令生成，此模块主要利用  puppeteer 操作无头浏览器访问所有路由然后生成骨架屏代码文件。</li>\n</ol>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><h4 id=\"1-安装插件\"><a href=\"#1-安装插件\" class=\"headerlink\" title=\"1. 安装插件\"></a>1. 安装插件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install web-skeleton-screen</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-接入webpack插件\"><a href=\"#2-接入webpack插件\" class=\"headerlink\" title=\"2. 接入webpack插件\"></a>2. 接入webpack插件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">SkeletonPlugin</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;web-skeleton-screen&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack 相关</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"attr\">configureWebpack</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">SkeletonPlugin</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">staticDir</span>: path.<span class=\"title function_\">resolve</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;./dist&#x27;</span>), <span class=\"comment\">// 打包后生成的路径</span></span><br><span class=\"line\">        <span class=\"attr\">configPath</span>: path.<span class=\"title function_\">resolve</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;wss.config.js&#x27;</span>), <span class=\"comment\">// 骨架屏的配置文件</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-接入vue3插件\"><a href=\"#3-接入vue3插件\" class=\"headerlink\" title=\"3. 接入vue3插件\"></a>3. 接入vue3插件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> vue3Plugin <span class=\"keyword\">from</span> <span class=\"string\">&#x27;web-skeleton-screen/vue3Plugin&#x27;</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(vue3Plugin, <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../wss.config.js&#x27;</span>)); <span class=\"comment\">// 参数为配置文件的内容，必须要传入</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-根目录创建配置文件-wss-config-js\"><a href=\"#4-根目录创建配置文件-wss-config-js\" class=\"headerlink\" title=\"4. 根目录创建配置文件 wss.config.js\"></a>4. 根目录创建配置文件 wss.config.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">filepath</span>: <span class=\"string\">&#x27;skeleton_out&#x27;</span>,   <span class=\"comment\">// 生成骨架屏的存放文件夹名称</span></span><br><span class=\"line\">      <span class=\"attr\">injectSelector</span>: <span class=\"string\">&#x27;#app&#x27;</span>  <span class=\"comment\">// 生成的骨架屏插入页面的节点</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">headless</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否是无头浏览器模式</span></span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"comment\">// 项目的跟路径</span></span><br><span class=\"line\">  <span class=\"attr\">basePort</span>: <span class=\"number\">8080</span>, <span class=\"comment\">// 项目dev环境的端口</span></span><br><span class=\"line\">  <span class=\"attr\">listenServerPort</span>: <span class=\"number\">3566</span>, <span class=\"comment\">// 监听服务端口</span></span><br><span class=\"line\">  <span class=\"attr\">src</span>: <span class=\"string\">&#x27;src&#x27;</span>, <span class=\"comment\">// 源码目录，监听服务需要监听这个目录</span></span><br><span class=\"line\">  <span class=\"attr\">pollTime</span>: <span class=\"number\">10000</span>, <span class=\"comment\">// 多久轮询一次生成新的骨架屏，单位毫秒，默认为60秒</span></span><br><span class=\"line\">  <span class=\"comment\">// 是否在打包时将骨架屏代码生成静态的html, 推荐false</span></span><br><span class=\"line\">  <span class=\"attr\">staticGeneration</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// url携带的参数 使用命令生成时有效</span></span><br><span class=\"line\">  <span class=\"attr\">urlParams</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">token</span>: <span class=\"string\">&#x27;af826ad2-085a-4062-8f9f-7a28151ddf8c&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">userId</span>: <span class=\"number\">10868367</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 是否将骨架屏幕元素尺寸转换成rem</span></span><br><span class=\"line\">  <span class=\"attr\">toRem</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 俩个相邻或者相交元素合并限制，单位px</span></span><br><span class=\"line\"><span class=\"comment\">   * 骨架节点生成时，会依次比对以前生成的节点，是否存在相交情况</span></span><br><span class=\"line\"><span class=\"comment\">   */</span> </span><br><span class=\"line\">  <span class=\"attr\">blockMerge</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 是否开启节点合并功能，如果开启的话，会自动合并top和height一致或者left和width一致的相交元素，并且根据下述规则判断其他情况是否合并</span></span><br><span class=\"line\">      <span class=\"attr\">enable</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">      <span class=\"attr\">maxWidth</span>: <span class=\"number\">30</span>, <span class=\"comment\">// 目标节点的最大宽度</span></span><br><span class=\"line\">      <span class=\"attr\">maxHeight</span>: <span class=\"number\">30</span>, <span class=\"comment\">// 目标节点的最大高度</span></span><br><span class=\"line\">      <span class=\"attr\">maxX</span>: <span class=\"number\">0</span>, <span class=\"comment\">// 目标节点和比对节点之间的横坐标最大间距</span></span><br><span class=\"line\">      <span class=\"attr\">maxY</span>: <span class=\"number\">0</span>, <span class=\"comment\">// 目标节点和比对节点之间的纵坐标最大间距</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/// 骨架屏路由生成黑名单 填路由</span></span><br><span class=\"line\">  <span class=\"attr\">blackList</span>: [</span><br><span class=\"line\">      </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"comment\">/// 监听黑名单，命中的路由禁用骨架屏监听生成功能</span></span><br><span class=\"line\">  <span class=\"attr\">listenBlackList</span>: [</span><br><span class=\"line\">      </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 针对某些节点可以选择忽略或者被忽略的节点不忽略</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; node 节点dom</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; url 路由，可以针对某个路由的操作</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; draw 画骨架屏的方法</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@returns</span> true =&gt; 不忽略，会根据内置方法画这个节点的骨架屏 false =&gt; 忽略，不会画这个节点的骨架屏，当然也可以自行生成这个节点的骨架屏</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"attr\">includeElement</span>: <span class=\"keyword\">function</span> (<span class=\"params\">node, url, draw</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 弹窗忽略</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(node.<span class=\"property\">id</span> === <span class=\"string\">&#x27;modal&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      url = url.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;/share&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> routers = <span class=\"title function_\">dealRouteIncludeElement</span>(node, draw);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(routers[url] &amp;&amp; <span class=\"keyword\">typeof</span> routers[url] === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> routers[url]();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 针对不同路由的处理</span></span><br><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">dealRouteIncludeElement</span>(<span class=\"params\">node, draw</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">              <span class=\"string\">&#x27;/download&#x27;</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(node.<span class=\"property\">className</span> === <span class=\"string\">&#x27;van-swipe my-swipe&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(node.<span class=\"property\">className</span> === <span class=\"string\">&#x27;download-btn&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">              <span class=\"string\">&#x27;/facebookDownload&#x27;</span> : <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(node.<span class=\"property\">className</span> === <span class=\"string\">&#x27;code-viewer&#x27;</span>) &#123;</span><br><span class=\"line\">                  <span class=\"title function_\">draw</span>(&#123;</span><br><span class=\"line\">                    width : <span class=\"string\">&#x27;2.35rem&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">height</span>: <span class=\"string\">&#x27;0.34rem&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">top</span>: <span class=\"string\">&#x27;4.12rem&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0.7rem&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">radius</span>: <span class=\"string\">&#x27;0.17rem&#x27;</span>,</span><br><span class=\"line\">                  &#125;)</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = config;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-如果需要全局生成命令，可在package-json中加一条命令配置，运行该命令可以一次性生成所有路由的骨架屏\"><a href=\"#5-如果需要全局生成命令，可在package-json中加一条命令配置，运行该命令可以一次性生成所有路由的骨架屏\" class=\"headerlink\" title=\"5. 如果需要全局生成命令，可在package.json中加一条命令配置，运行该命令可以一次性生成所有路由的骨架屏\"></a>5. 如果需要全局生成命令，可在package.json中加一条命令配置，运行该命令可以一次性生成所有路由的骨架屏</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;createSkeleton&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;wss start -c wss.config.js&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"骨架屏生成的三种方式\"><a href=\"#骨架屏生成的三种方式\" class=\"headerlink\" title=\"骨架屏生成的三种方式\"></a>骨架屏生成的三种方式</h3><h4 id=\"1-全局统一生成\"><a href=\"#1-全局统一生成\" class=\"headerlink\" title=\"1. 全局统一生成\"></a>1. 全局统一生成</h4><p>执行以下命令，此命令会生成所有路由的骨架屏文件（黑名单除外）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run createSkeleton</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-开发阶段静默生成\"><a href=\"#2-开发阶段静默生成\" class=\"headerlink\" title=\"2. 开发阶段静默生成\"></a>2. 开发阶段静默生成</h4><p>当项目启动时，会静默启动监听服务，当打开某个页面时，会定期（10秒）轮询触发生成新的骨架屏代码，监听文件修改，如果有文件修改则会生成新的骨架屏代码。</p>\n<p>如果不想让某个路由启动监听生成功能，可以在配置文件中配置监听黑名单，也可以在url中传入参数?noListen&#x3D;1不启动监听功能</p>\n<h4 id=\"3-控制台生成\"><a href=\"#3-控制台生成\" class=\"headerlink\" title=\"3. 控制台生成\"></a>3. 控制台生成</h4><p>如果想针对于某个页面的生成，可以在控制台输入以下方法生成骨架屏</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createSkeleton</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>配置文件在项目的根目录wss.config.js，可以配置黑名单、以及生成骨架屏时针对某个路由某个节点的特殊处理。</p>\n<h3 id=\"暴露方法-可以直接在运行时浏览器控制台调用\"><a href=\"#暴露方法-可以直接在运行时浏览器控制台调用\" class=\"headerlink\" title=\"暴露方法 可以直接在运行时浏览器控制台调用\"></a>暴露方法 可以直接在运行时浏览器控制台调用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生成骨架屏（dev有效）</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">createSkeleton</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 预览骨架屏（dev有效）</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">previewSkeleton</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 显示骨架屏，显示后需要自行隐藏否则不会消失</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">showSkeleton</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 隐藏骨架屏</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">hideSkeleton</span>()</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"无侵入式骨架屏全自动生成集成方案背景骨架屏是一种在页面数据加载时，先显示页面结构大致轮廓的过渡效果，让用户感知到页面正在加载，同时避免了用户看到空白页面的尴尬。...","permalink":"/post/vue/骨架屏","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"骨架屏","slug":"骨架屏","count":1,"path":"api/tags/骨架屏.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%97%A0%E4%BE%B5%E5%85%A5%E5%BC%8F%E9%AA%A8%E6%9E%B6%E5%B1%8F%E5%85%A8%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">无侵入式骨架屏全自动生成集成方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">方案介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">使用方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">1. 安装插件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%8E%A5%E5%85%A5webpack%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">2. 接入webpack插件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%8E%A5%E5%85%A5vue3%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">3. 接入vue3插件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-wss-config-js\"><span class=\"toc-text\">4. 根目录创建配置文件 wss.config.js</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E5%A6%82%E6%9E%9C%E9%9C%80%E8%A6%81%E5%85%A8%E5%B1%80%E7%94%9F%E6%88%90%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%8F%AF%E5%9C%A8package-json%E4%B8%AD%E5%8A%A0%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%BF%90%E8%A1%8C%E8%AF%A5%E5%91%BD%E4%BB%A4%E5%8F%AF%E4%BB%A5%E4%B8%80%E6%AC%A1%E6%80%A7%E7%94%9F%E6%88%90%E6%89%80%E6%9C%89%E8%B7%AF%E7%94%B1%E7%9A%84%E9%AA%A8%E6%9E%B6%E5%B1%8F\"><span class=\"toc-text\">5. 如果需要全局生成命令，可在package.json中加一条命令配置，运行该命令可以一次性生成所有路由的骨架屏</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AA%A8%E6%9E%B6%E5%B1%8F%E7%94%9F%E6%88%90%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">骨架屏生成的三种方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%85%A8%E5%B1%80%E7%BB%9F%E4%B8%80%E7%94%9F%E6%88%90\"><span class=\"toc-text\">1. 全局统一生成</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E9%9D%99%E9%BB%98%E7%94%9F%E6%88%90\"><span class=\"toc-text\">2. 开发阶段静默生成</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%94%9F%E6%88%90\"><span class=\"toc-text\">3. 控制台生成</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9A%B4%E9%9C%B2%E6%96%B9%E6%B3%95-%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">暴露方法 可以直接在运行时浏览器控制台调用</span></a></li></ol></li></ol></li></ol>","author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"去哪儿一面","uid":"b511e00209290f3ef9e54ae62e00d2ab","slug":"面试题/去哪儿一面","date":"2024-05-06T03:42:32.000Z","updated":"2024-05-06T12:34:39.705Z","comments":true,"path":"api/articles/面试题/去哪儿一面.json","keywords":null,"cover":[],"text":"谈谈你对mvvm的理解MVVM分为三个部分：分别是M（Model，模型层 ），V（View，视图层），VM（ViewModel，V与M连接的桥梁，也可以看作为控...","permalink":"/post/面试题/去哪儿一面","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"面试题","slug":"面试题","count":16,"path":"api/tags/面试题.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"组件","uid":"c4dc6ced9f0994e1a0ee8eb12763c343","slug":"flutter/组件","date":"2024-05-05T06:52:32.000Z","updated":"2024-05-05T06:52:33.993Z","comments":true,"path":"api/articles/flutter/组件.json","keywords":null,"cover":null,"text":"TextText用于显示简单的文本 1Text('这是一段文本') 参数 释义 参数类型 备注 textAlign 对齐方式 TextAlign TextAli...","permalink":"/post/flutter/组件","photos":[],"count_time":{"symbolsCount":268,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"flutter","slug":"flutter","count":1,"path":"api/tags/flutter.json"}],"author":{"name":"MessageWall","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fsafe-img.xhscdn.com%2Fbw1%2F0bcda423-149d-411d-a505-d29abc1ab6de%3FimageView2%2F2%2Fw%2F1080%2Fformat%2Fjpg&refer=http%3A%2F%2Fsafe-img.xhscdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1717404600&t=829a21da2f1f1a8181b572805d48b476","link":"/","description":"欢迎来到小王的博客～ <br/> 博客不定时更新，欢迎收藏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}